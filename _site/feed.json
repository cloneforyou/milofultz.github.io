{
    "version": "https://jsonfeed.org/version/1",
    "title": "Milo Fultz",
    "home_page_url": "http://milofultz.com/",
    "feed_url": "http://milofultz.com/feed.json",
    "description": null,
    "icon": "http://milofultz.com/apple-touch-icon.png",
    "favicon": "http://milofultz.com/favicon.ico",
    "expired": false,
    
    "author":  {
        "name": "Milo Fultz",
        "url": "http://milofultz.com",
        "avatar": null
    },
    
"items": [
    
        {
            "id": "http://milofultz.com/2020/10/17/tod-python",
            "title": "Tod - Plan and Manage Daily Tasks In The CLI (Python)",
            "summary": "Tod helps you plan and manage daily tasks. Deliberately simple so I can stay focused on what I need to do.",
            "content_text": "Check out the up-to-date version on GitHubPlan and manage daily tasks. Deliberately simple so I can stay focused on what I need to do.  Saves tasks in an easy to read plaintext file in the root folder called ~/.tod  Includes built in timer for timeboxing/focused work time  Pulls most recent MIT from Track when starting a new set of daily tasks  Allows pulling of completed tasks for Track’s accomplishment tracking",
            "content_html": "<p><a href=\"https://github.com/milofultz/tod\"><strong>Check out the up-to-date version on GitHub</strong></a></p><p>Plan and manage daily tasks. Deliberately simple so I can stay focused on what I need to do.</p><ul>  <li>Saves tasks in an easy to read plaintext file in the root folder called <code class=\"highlighter-rouge\">~/.tod</code></li>  <li>Includes built in timer for timeboxing/focused work time</li>  <li>Pulls most recent MIT from <a href=\"/2020/10/12/track-python\">Track</a> when starting a new set of daily tasks</li>  <li>Allows pulling of completed tasks for <a href=\"/2020/10/12/track-python\">Track’s</a> accomplishment tracking</li></ul><!-- - _202XXXXX: Update format_ -->",
            "url": "http://milofultz.com/2020/10/17/tod-python",
            
            
            
            
            
            "date_published": "2020-10-17T00:00:00-07:00",
            "date_modified": "2020-10-17T00:00:00-07:00",
            
                "author":  {
                "name": "Milo Fultz",
                "url": "http://milofultz.com",
                "avatar": null
                }
                
            
        },
    
        {
            "id": "http://milofultz.com/2020/10/16/friends-dont",
            "title": "Friends don't let friends look at pageviews",
            "summary": null,
            "content_text": "“Friends don’t let friends look at pageviews. Ever.” - Avinash Kaushik (from Algorithms To Live By)",
            "content_html": "<p>“Friends don’t let friends look at pageviews. Ever.” - Avinash Kaushik (<em>from Algorithms To Live By</em>)</p><!-- - _202XXXXX: Update format_ -->",
            "url": "http://milofultz.com/2020/10/16/friends-dont",
            
            
            
            
            
            "date_published": "2020-10-16T00:00:00-07:00",
            "date_modified": "2020-10-16T00:00:00-07:00",
            
                "author":  {
                "name": "Milo Fultz",
                "url": "http://milofultz.com",
                "avatar": null
                }
                
            
        },
    
        {
            "id": "http://milofultz.com/2020/10/12/track-python",
            "title": "Track - Accomplishment, Mood, MIT, and Journal (Python)",
            "summary": "Track your accomplishments, mood, most important task, and journal entries over time in a simple CLI Python program.",
            "content_text": "Check out the up-to-date version on GitHubI wanted to have a way to track my mood and accomplishments over time, keep track of my priority for the next day, as well as a basic journaling platform that was not pretentious or leading. Seemed like a good project and I had seen a few people on http://merveilles.town making some fun CLI tools in this vein, so I took a swing at it.Inspo from lon by dstn.  Tracks mood, accomplishments, journal entries, and MIT for next day  Saves data in an easy to read plaintext file in the root folder called ~/.track  Integrates with Tod to pull in completed accomplishments  Allows pulling of MIT into Tod’s task listUsageOn prompting, input:  Your mood on a 1-5 scale.  Your accomplishments for the day. When finished, leave the line blank and press enter.  Your most important task for the next day.  A 50 character or less summary of your day.  A longer journal entry of anything you feel is relevant.This will save this data into a file named .track in your root folder, formatted like so:---20201011 (4) Spend time on programming, exercise, and work.* Write daily tracker program* Exercise with 1.5hr walk* Brainstorm programming projects* Vote in election&gt; Prepare for next week and resolve all open tasksI walked farther south than I have since moving here, and I really like how quietthe side streets are.Been listening to vogue ball playlists all night.",
            "content_html": "<p><a href=\"https://github.com/milofultz/track\"><strong>Check out the up-to-date version on GitHub</strong></a></p><p>I wanted to have a way to track my mood and accomplishments over time, keep track of my priority for the next day, as well as a basic journaling platform that was not pretentious or leading. Seemed like a good project and I had seen a few people on <a href=\"http://merveilles.town\">http://merveilles.town</a> making some fun CLI tools in this vein, so I took a swing at it.</p><p>Inspo from <a href=\"https://github.com/0xdstn/lon\">lon by dstn</a>.</p><ul>  <li>Tracks mood, accomplishments, journal entries, and MIT for next day</li>  <li>Saves data in an easy to read plaintext file in the root folder called <code class=\"highlighter-rouge\">~/.track</code></li>  <li>Integrates with <a href=\"/2020/10/17/tod-python\">Tod</a> to pull in completed accomplishments</li>  <li>Allows pulling of MIT into <a href=\"/2020/10/17/tod-python\">Tod’s</a> task list</li></ul><h3 id=\"usage\">Usage</h3><p>On prompting, input:</p><ol>  <li>Your mood on a 1-5 scale.</li>  <li>Your accomplishments for the day. When finished, leave the line blank and press enter.</li>  <li>Your most important task for the next day.</li>  <li>A 50 character or less summary of your day.</li>  <li>A longer journal entry of anything you feel is relevant.</li></ol><p>This will save this data into a file named <code class=\"highlighter-rouge\">.track</code> in your root folder, formatted like so:</p><div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>---20201011 (4) Spend time on programming, exercise, and work.* Write daily tracker program* Exercise with 1.5hr walk* Brainstorm programming projects* Vote in election&gt; Prepare for next week and resolve all open tasksI walked farther south than I have since moving here, and I really like how quietthe side streets are.Been listening to vogue ball playlists all night.</code></pre></div></div><!-- - _202XXXXX: Update format_ -->",
            "url": "http://milofultz.com/2020/10/12/track-python",
            
            
            
            
            
            "date_published": "2020-10-12T00:00:00-07:00",
            "date_modified": "2020-10-12T00:00:00-07:00",
            
                "author":  {
                "name": "Milo Fultz",
                "url": "http://milofultz.com",
                "avatar": null
                }
                
            
        },
    
        {
            "id": "http://milofultz.com/2020/10/12/sleep-realms",
            "title": "Sleep Realms",
            "summary": "Amp up your Star Realms game through osmotically absorbing the epic music.",
            "content_text": "Listen hereIf you want to get better at Star Realms, listen to this while you sleep and it will increase your ability to win by 341%.",
            "content_html": "<p><a href=\"https://www.youtube.com/watch?v=ie5z6AsEMQU\"><img src=\"https://i.ytimg.com/vi/ie5z6AsEMQU/hqdefault.jpg\" alt=\"Sleep Realms\" /></a></p><p><a href=\"https://www.youtube.com/watch?v=ie5z6AsEMQU\">Listen here</a></p><p>If you want to get better at Star Realms, listen to this while you sleep and it will increase your ability to win by 341%.</p><!-- - _202XXXXX: Update format_ -->",
            "url": "http://milofultz.com/2020/10/12/sleep-realms",
            
            
            
            
            
            "date_published": "2020-10-12T00:00:00-07:00",
            "date_modified": "2020-10-12T00:00:00-07:00",
            
                "author":  {
                "name": "Milo Fultz",
                "url": "http://milofultz.com",
                "avatar": null
                }
                
            
        },
    
        {
            "id": "http://milofultz.com/2020/10/04/two-minute-rule",
            "title": "The Two-Minute Rule",
            "summary": null,
            "content_text": "I’m a big self-help junkie and there honestly isn’t a lot that I feel I have taken action and eventually has stuck. Usually it’s a lot of “should”ing about random things in my life that in hindsight is not that big of a deal. Or it’s stuff that makes a real difference but is really hard[1], which means a lot more work.But one thing has amazingly made it through this filter in the background, being both successful and impactful in my life: the Two-Minute Rule from Getting Things Done.It’s simple and has been tossed around in a zillion different books by a billion different people under just as many names (thirty-second rule, five-minute rule). Essentially, if it takes less that two minutes to do, do it now. It’s so easy and honestly is such a small time investment, it somehow just happened for me. And even better, when something does fall through the cracks even though I know it will only take a couple of minutes, this now means something. It means that this task or to-do has some emotional weight that I need to deal with, and at least I’ve made it easier to see this and now actionable.The thing that I like most about this is that it’s not about ““getting things done” (particularly for the sake of getting things done, which is the worst), it’s about closing open loops. I realized I ran around all day seeing these open loops and it weighted me down: a dirty dish, unopened mail, a difficult email, etc. Using this rule helps with the toughest part of completing these difficult tasks: starting.References:  https://tjcx.me/posts/defense-self-help/",
            "content_html": "<p>I’m a big self-help junkie and there honestly isn’t a lot that I feel I have taken action and eventually has stuck. Usually it’s a lot of “should”ing about random things in my life that in hindsight is not that big of a deal. Or it’s <a href=\"https://tjcx.me/posts/defense-self-help/\">stuff that makes a real difference but is really hard[1]</a>, which means a lot more work.</p><p>But one thing has amazingly made it through this filter in the background, being both successful and impactful in my life: the Two-Minute Rule from Getting Things Done.</p><p>It’s simple and has been tossed around in a zillion different books by a billion different people under just as many names (thirty-second rule, five-minute rule). Essentially, <strong>if it takes less that two minutes to do, do it now</strong>. It’s so easy and honestly is such a small time investment, it somehow just happened for me. And even better, when something does fall through the cracks even though I know it will only take a couple of minutes, this now <em>means</em> something. It means that this task or to-do has some emotional weight that I need to deal with, and at least I’ve made it easier to see this and now actionable.</p><p>The thing that I like most about this is that it’s not about ““getting things done” (particularly for the <em>sake</em> of getting things done, which is the worst), it’s about closing open loops. I realized I ran around all day seeing these open loops and it weighted me down: a dirty dish, unopened mail, a difficult email, etc. Using this rule helps with the toughest part of completing these difficult tasks: <strong>starting</strong>.</p><hr /><p>References:</p><ol>  <li><a href=\"https://tjcx.me/posts/defense-self-help/\">https://tjcx.me/posts/defense-self-help/</a></li></ol><!-- - _202XXXXX: Update format_ -->",
            "url": "http://milofultz.com/2020/10/04/two-minute-rule",
            
            
            
            
            
            "date_published": "2020-10-04T00:00:00-07:00",
            "date_modified": "2020-10-04T00:00:00-07:00",
            
                "author":  {
                "name": "Milo Fultz",
                "url": "http://milofultz.com",
                "avatar": null
                }
                
            
        },
    
        {
            "id": "http://milofultz.com/2020/10/04/doing",
            "title": "Trying to become reacquainted with being bored",
            "summary": null,
            "content_text": "During quarantine, I’ve been trying to just be bored and not constantly DO things and it’s weird how hard that is. Blah blah, every complaint about technology bad. But that aside, I do like techology and love spending time with it. And trying to reconcile these two things in particular has been difficult.Tech has had a weird hold on me since I was a kid, and it has been what I have always wanted to spend my time doing. But I felt like I was also getting signals from various places that technology was bad and I shouldn’t spend so much time on it, probably a recoil from video games and the like.So now looking back, I think my reticence was due to a conflict between my love of tech and the avoidance of doing “the bad thing”, in this case, “waste my life” on computers, etc. Realizing this recently has led to a feverish pursuit of so many things I have pursued but guiltily so for years: programming, video games, and electronics in general.During these COVID times, I couldn’t have really asked for a better hobby than sitting on a computer and creating things alone in a room. However, these times of reclusivity also create this problem where I find I can’t let it go and I have to keep working because I “should” or “else” “something” might happen.So now I am on a quest to try and be bored more. Like not do anything for as long as possible until I feel an urge to do it or a really strong desire, and not just a tiny pinprick of discomfort. At this point, I am completely out of practice, but I’m excited to see how this develops and if this space leaves me a bit more relaxed and mindful.",
            "content_html": "<p>During quarantine, I’ve been trying to just be bored and not constantly DO things and it’s weird how hard that is. Blah blah, every complaint about technology bad. But that aside, I <em>do</em> like techology and love spending time with it. And trying to reconcile these two things in particular has been difficult.</p><p>Tech has had a weird hold on me since I was a kid, and it has been what I have always wanted to spend my time doing. But I felt like I was also getting signals from various places that technology was bad and I shouldn’t spend so much time on it, probably a recoil from video games and the like.</p><p>So now looking back, I think my reticence was due to a conflict between my love of tech and the avoidance of doing “the bad thing”, in this case, “waste my life” on computers, etc. Realizing this recently has led to a feverish pursuit of so many things I have pursued but guiltily so for years: programming, video games, and electronics in general.</p><p>During these COVID times, I couldn’t have really asked for a better hobby than sitting on a computer and creating things alone in a room. However, these times of reclusivity also create this problem where I find I can’t let it go and I have to keep <em>working</em> because I “should” or “else” “something” might happen.</p><p>So now I am on a quest to try and be bored more. Like not do anything for as long as possible until I feel an <strong>urge</strong> to do it or a really strong desire, and not just a tiny pinprick of discomfort. At this point, I am completely out of practice, but I’m excited to see how this develops and if this space leaves me a bit more relaxed and mindful.</p><!-- - _202XXXXX: Update format_ -->",
            "url": "http://milofultz.com/2020/10/04/doing",
            
            
            
            
            
            "date_published": "2020-10-04T00:00:00-07:00",
            "date_modified": "2020-10-04T00:00:00-07:00",
            
                "author":  {
                "name": "Milo Fultz",
                "url": "http://milofultz.com",
                "avatar": null
                }
                
            
        },
    
        {
            "id": "http://milofultz.com/2020/09/30/evernote-images",
            "title": "Maximize Evernote With Less Images In Web Clipper (JS)",
            "summary": "Either using a Google Chrome extension or one line of JS, maximize your snippets in Evernote and stay away from $8 subscriptions for a tiny feature.",
            "content_text": "Check out the up-to-date version on GitHubWhen using Evernote’s web clipper, I was using too much of my upload cap with Evernote every month, mostly because images are too big when cropping the whole article. So I decided to practice some JS and see if I could make it work better without paying an $8 per month subscription for just a few extra megs of upload per month.This extension has been tested to work on the “Article”, “Simplified Article”, and “Full Page” options.Cheap and Easy No-Install Browser Agnostic VersionIn the console of your browser, type the following:document.querySelectorAll('img').forEach(image =&gt; image.remove());To reset this, reload your page.Chrome ExtensionThis extension is really simple: on click, it goes through all the img elements on the page and removes them from the DOM. On another click, the page is refreshed.The original implementation set the element’s display to none; on clicking the button again, all display settings for the images were set to their original value. Unfortunately, Evernote adds and modifies inline style on import, so it negated this otherwise more elegant implementation.Installation:To install this extension, please go to the Github page for updated information and instructions.- 20201007: Changed to avoid Evernote’s inline styling on import.",
            "content_html": "<p><a href=\"https://github.com/milofultz/no-images\"><strong>Check out the up-to-date version on GitHub</strong></a></p><p>When using Evernote’s web clipper, I was using too much of my upload cap with Evernote every month, mostly because images are too big when cropping the whole article. So I decided to practice some JS and see if I could make it work better without paying an $8 per month subscription for just a few extra megs of upload per month.</p><p>This extension has been tested to work on the “Article”, “Simplified Article”, and “Full Page” options.</p><h2 id=\"cheap-and-easy-no-install-browser-agnostic-version\">Cheap and Easy No-Install Browser Agnostic Version</h2><p>In the console of your browser, type the following:</p><div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>document.querySelectorAll('img').forEach(image =&gt; image.remove());</code></pre></div></div><p>To reset this, reload your page.</p><h2 id=\"chrome-extension\">Chrome Extension</h2><p>This extension is really simple: on click, it goes through all the <code class=\"highlighter-rouge\">img</code> elements on the page and removes them from the DOM. On another click, the page is refreshed.</p><p>The original implementation set the element’s display to <code class=\"highlighter-rouge\">none</code>; on clicking the button again, all display settings for the images were set to their original value. Unfortunately, Evernote adds and modifies inline style on import, so it negated this otherwise more elegant implementation.</p><h3 id=\"installation\">Installation:</h3><p>To install this extension, please go to the Github page for updated information and instructions.</p><p><em>- 20201007: Changed to avoid Evernote’s inline styling on import.</em></p>",
            "url": "http://milofultz.com/2020/09/30/evernote-images",
            
            
            
            
            
            "date_published": "2020-09-30T00:00:00-07:00",
            "date_modified": "2020-09-30T00:00:00-07:00",
            
                "author":  {
                "name": "Milo Fultz",
                "url": "http://milofultz.com",
                "avatar": null
                }
                
            
        },
    
        {
            "id": "http://milofultz.com/2020/09/26/zentube",
            "title": "Zentube - Youtube Lite w/Note Taking (HTML/CSS/JS)",
            "summary": "Distraction-free note taking on Youtube videos. Includes file export and automatic timestamps.",
            "content_text": "Try it out here // You can find the updated project and all necessary files here on GitHub.I wanted to be able to take notes on a Youtube video without having to tab out of the window to a text editor all of the time. After seeing Josh Alanier’s Down and Hundred Rabbit’s Left, I realized I didn’t need to do anything fancy, and in fact I preferred the minimalist layout that vanilla JS can provide.This saves the text you write for a given Youtube video into local storage and will load it up again upon returning to the same video. Supports exporting to a text file with ctrl + s and adding automatic timestamps with ctrl + d.Borrowed/stole heavily from Skeleton CSS and Josh Alanier’s Down for code, stylesheets, and ideas.",
            "content_html": "<p><a href=\"/assets/20200926zentube/index.html\"><strong>Try it out here</strong></a> // <a href=\"https://github.com/milofultz/zentube\">You can find the updated project and all necessary files here on GitHub.</a></p><p>I wanted to be able to take notes on a Youtube video without having to tab out of the window to a text editor all of the time. After seeing Josh Alanier’s <a href=\"https://down.avanier.now.sh\">Down</a> and Hundred Rabbit’s <a href=\"https://github.com/hundredrabbits/left\">Left</a>, I realized I didn’t need to do anything fancy, and in fact I preferred the minimalist layout that vanilla JS can provide.</p><p>This saves the text you write for a given Youtube video into local storage and will load it up again upon returning to the same video. Supports exporting to a text file with <code>ctrl + s</code> and adding automatic timestamps with <code>ctrl + d</code>.</p><p>Borrowed/stole heavily from <a href=\"http://getskeleton.com/\">Skeleton CSS</a> and Josh Alanier’s <a href=\"https://down.avanier.now.sh\">Down</a> for code, stylesheets, and ideas.</p><hr />",
            "url": "http://milofultz.com/2020/09/26/zentube",
            
            
            
            
            
            "date_published": "2020-09-26T00:00:00-07:00",
            "date_modified": "2020-09-26T00:00:00-07:00",
            
                "author":  {
                "name": "Milo Fultz",
                "url": "http://milofultz.com",
                "avatar": null
                }
                
            
        },
    
        {
            "id": "http://milofultz.com/2020/09/23/mastodon",
            "title": "Mastodon",
            "summary": null,
            "content_text": "Been digging into Mastodon, as it brings all the good things I like about social media and none of the trash. Find me there.- 20201009: Moved to https://merveilles.town",
            "content_html": "<p>Been digging into Mastodon, as it brings all the good things I like about social media and none of the trash. <a rel=\"me\" href=\"https://merveilles.town/@milofultz\">Find me there.</a></p><p><em>- 20201009: Moved to <a href=\"https://merveilles.town\">https://merveilles.town</a></em></p>",
            "url": "http://milofultz.com/2020/09/23/mastodon",
            
            
            
            
            
            "date_published": "2020-09-23T00:00:00-07:00",
            "date_modified": "2020-09-23T00:00:00-07:00",
            
                "author":  {
                "name": "Milo Fultz",
                "url": "http://milofultz.com",
                "avatar": null
                }
                
            
        },
    
        {
            "id": "http://milofultz.com/2020/09/01/domine",
            "title": "Domine (game from Hundred Rabbits)",
            "summary": "I transcribed the rules for this simple game from Hundred Rabbits since it looks really fun and I can't find their rules page anymore.",
            "content_text": "I recently came across this video from Hundred Rabbits of a game called Domine. Super simple game you can play with a set of dominoes. I transcribed the rules for this game from the video since it looks really fun and I can’t find the rules page anymore.Equipment: Double 9 domino setGoal: To have the most “living” dominoes at the end of the round.  Each player draws a hand of seven dominoes and keeps them hidden from their opponent. The two numbers on either side of a domino are the attack and defense points, facing the opponent and the player respectively. The dominoes can be flipped as long as it’s before they are played.  Each turn consists of an attack using a domino and choosing which is the attack side and which is the defense.  Players alternate turns until all dominoes have been played. The player with the most living dominoes wins.Attack RulesWhen a player attacks with a domino, the opponent must defend with a value equal to or higher than the attack. If the opponent’s domino defense value is lower than the attack, the domino is killed. If the opponent’s domino defense value is equal to or higher, then they have survived. If the opponent can defend and has an attack number higher than the player’s domino defense value, the opponent can counter to kill the player’s domino. Double dominoes get first strike, regardless if they initiate the attack.References:  Inexpensive and Minimal Equipment Games To Spend Time On",
            "content_html": "<p>I recently came across this <a href=\"https://www.youtube.com/watch?v=fjZb190qn00\">video</a> from Hundred Rabbits of a game called Domine. Super simple game you can play with a set of dominoes. I transcribed the rules for this game from the video since it looks really fun and I can’t find the rules page anymore.</p><hr /><p>Equipment: Double 9 domino set</p><p>Goal: To have the most “living” dominoes at the end of the round.</p><ul>  <li>Each player draws a hand of seven dominoes and keeps them hidden from their opponent. The two numbers on either side of a domino are the attack and defense points, facing the opponent and the player respectively. The dominoes can be flipped as long as it’s before they are played.</li>  <li>Each turn consists of an attack using a domino and choosing which is the attack side and which is the defense.</li>  <li>Players alternate turns until all dominoes have been played. The player with the most living dominoes wins.</li></ul><h3 id=\"attack-rules\">Attack Rules</h3><p>When a player attacks with a domino, the opponent must defend with a value equal to or higher than the attack. If the opponent’s domino defense value is lower than the attack, the domino is killed. If the opponent’s domino defense value is equal to or higher, then they have survived. If the opponent can defend and has an attack number higher than the player’s domino defense value, the opponent can counter to kill the player’s domino. Double dominoes get first strike, regardless if they initiate the attack.</p><hr /><p>References:</p><ol>  <li><a href=\"/2020/06/25/inexpensive-games\">Inexpensive and Minimal Equipment Games To Spend Time On</a></li></ol>",
            "url": "http://milofultz.com/2020/09/01/domine",
            
            
            
            
            
            "date_published": "2020-09-01T00:00:00-07:00",
            "date_modified": "2020-09-01T00:00:00-07:00",
            
                "author":  {
                "name": "Milo Fultz",
                "url": "http://milofultz.com",
                "avatar": null
                }
                
            
        },
    
        {
            "id": "http://milofultz.com/2020/08/26/random-note",
            "title": "Open A Random Note/Lo-Fi Idea Generator (Python)",
            "summary": "I got inspired by Tiago Forte's RandomNote Web and decided to make my own simple version using Python, Applescript, and nvALT, and it's easy to port.",
            "content_text": "For the last few months, I have been feeding my Zettelkasten with essentially anything that I find interesting: programming, emotional development, quotes, productivity, book or video reviews, whatever. If I think it’s something that will help me or make me excited later, I put it in there.The problem I had was that even though I had these notes for reference, I wasn’t finding myself reviewing them just for creating those interesting and random connections, which was something that I had initially started using the Zettelkasten for. Those random connections are what creates interesting ideas and diffuse connections, as well as a spaced repetition for ideas that I already decided are worth knowing.I found a solution that was implemented by productivity dude and Twitter instigator Tiago Forte. Essentially, his “second brain”, analogous to a Zettelkasten, is housed in Evernote, and he had an app developed that would pop open a random Evernote every time he clicked it. He found that this boosted his creativity and because of how easy it was, he was able to do it between meetings, during his breaks, essentially in any spare moment. In doing some research, I found somebody who made a random note Applescript for the Evernote app that looks like this:# Applescripttell application \"Evernote\"\tset noteList to find notes\tset randomNote to some item of noteList\tset query string of window 1 to (title of randomNote as string)end tellI figured it was just as simple of a task if you had your notes saved locally, which I do as text/Markdown files, so I set out to make a Python script that did this, along with an app implementation that can sit in my dock. I used the same process I did in my “Make Python ‘Apps’ and Shortcuts To Run Them on OSX” post, so obviously this is geared towards OSX users.  Create your Python script, replacing the paths and extension to yours:import osimport randomfolder = \"/path/to/notes\"prog = \"/path/to/application.app\"ext = \"txt\"file_list = os.listdir(folder)txt_list = [file for file in file_list if file.endswith(ext)]random_file = random.choice(file_list)random_fp = os.path.join(folder, random_file)os.system('open \"{}\" -a \"{}\"'.format(random_fp, prog))  Save this file and name it whatever you like .py, like random_note.py. (I saved it where all my code projects are, but you could also create a folder in your Applications folder and stick it there)  Open Script Editor and make a new document. Ensure that AppleScript is selected in the dropdown menu in the upper left of the window.  Create your Applescript, replacing the paths and script name to yours:do shell script \"cd '/path/to/script'; python script_name.py\"  Save the script in your Applications folder as an “Application” file format.  Put it on your dock and go wild.I added a little light bulb icon on mine[6], as is tradition, and it is a great way to pass the time. I spent all this time curating ideas, recipes, thoughts, information, and experiences I thought were interesting, and now I can really enjoy the payoff in a very fun way.References:    RandomNote app from Tiago Forte  RandomNote Web  random note Applescript for the Evernote app  Make Python ‘Apps’ and Shortcuts To Run Them on OSX  Add icon",
            "content_html": "<p>For the last few months, I have been feeding my <a href=\"/2020/05/22/zettelkasten\">Zettelkasten</a> with essentially anything that I find interesting: programming, emotional development, quotes, productivity, book or video reviews, whatever. If I think it’s something that will help me or make me excited later, I put it in there.</p><p>The problem I had was that even though I had these notes for reference, I wasn’t finding myself reviewing them just for creating those interesting and random connections, which was something that I had initially started using the Zettelkasten for. Those random connections are what creates interesting ideas and diffuse connections, as well as a spaced repetition for ideas that I already decided are worth knowing.</p><p>I found a solution that was implemented by productivity dude and Twitter instigator Tiago Forte. Essentially, his “second brain”, analogous to a Zettelkasten, is housed in Evernote, and he had <a href=\"\">an app</a> developed that would pop open a random Evernote every time he clicked it. He found that this boosted his creativity and because of how easy it was, he was able to do it between meetings, during his breaks, essentially in any spare moment. In doing some research, I found somebody who made a <a href=\"\">random note Applescript for the Evernote app</a> that looks like this:</p><div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code># Applescripttell application \"Evernote\"\tset noteList to find notes\tset randomNote to some item of noteList\tset query string of window 1 to (title of randomNote as string)end tell</code></pre></div></div><p>I figured it was just as simple of a task if you had your notes saved locally, which I do as text/Markdown files, so I set out to make a Python script that did this, along with an app implementation that can sit in my dock. I used the same process I did in my “<a href=\"/2020/07/22/make-python-apps\">Make Python ‘Apps’ and Shortcuts To Run Them on OSX</a>” post, so obviously this is geared towards OSX users.</p><hr /><ul>  <li>Create your Python script, replacing the paths and extension to yours:</li></ul><div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>import osimport randomfolder = \"/path/to/notes\"prog = \"/path/to/application.app\"ext = \"txt\"file_list = os.listdir(folder)txt_list = [file for file in file_list if file.endswith(ext)]random_file = random.choice(file_list)random_fp = os.path.join(folder, random_file)os.system('open \"{}\" -a \"{}\"'.format(random_fp, prog))</code></pre></div></div><ul>  <li>Save this file and name it whatever you like <code class=\"highlighter-rouge\">.py</code>, like <code class=\"highlighter-rouge\">random_note.py</code>. (I saved it where all my code projects are, but you could also create a folder in your Applications folder and stick it there)</li>  <li>Open Script Editor and make a new document. Ensure that AppleScript is selected in the dropdown menu in the upper left of the window.</li>  <li>Create your Applescript, replacing the paths and script name to yours:</li></ul><p><code class=\"highlighter-rouge\">do shell script \"cd '/path/to/script'; python script_name.py\"</code></p><ul>  <li>Save the script in your Applications folder as an “Application” file format.</li>  <li>Put it on your dock and go wild.</li></ul><p>I added a little light bulb icon on mine[6], as is tradition, and it is a great way to pass the time. I spent all this time curating ideas, recipes, thoughts, information, and experiences I thought were interesting, and now I can really enjoy the payoff in a very fun way.</p><hr /><p>References:</p><ol>  <li><a href=\"\"></a></li>  <li><a href=\"\">RandomNote app from Tiago Forte</a></li>  <li><a href=\"\">RandomNote Web</a></li>  <li><a href=\"\">random note Applescript for the Evernote app</a></li>  <li><a href=\"/2020/07/22/make-python-apps\">Make Python ‘Apps’ and Shortcuts To Run Them on OSX</a></li>  <li><a href=\"\">Add icon</a></li></ol>",
            "url": "http://milofultz.com/2020/08/26/random-note",
            
            
            
            
            
            "date_published": "2020-08-26T00:00:00-07:00",
            "date_modified": "2020-08-26T00:00:00-07:00",
            
                "author":  {
                "name": "Milo Fultz",
                "url": "http://milofultz.com",
                "avatar": null
                }
                
            
        },
    
        {
            "id": "http://milofultz.com/2020/08/22/purple-rain-outro",
            "title": "Purple Rain Outro Transcription",
            "summary": "A transcription of the DX7 strings outro for Purple Rain.",
            "content_text": "You can listen to it here on YouTube.",
            "content_html": "<p><img src=\"/assets/20200822PurpleRain.jpg\" alt=\"Purple Rain Outro Transcription\" /></p><p><a href=\"https://www.youtube.com/watch?v=km6Ryvor5_k\">You can listen to it here on YouTube.</a></p>",
            "url": "http://milofultz.com/2020/08/22/purple-rain-outro",
            
            
            
            
            
            "date_published": "2020-08-22T00:00:00-07:00",
            "date_modified": "2020-08-22T00:00:00-07:00",
            
                "author":  {
                "name": "Milo Fultz",
                "url": "http://milofultz.com",
                "avatar": null
                }
                
            
        },
    
        {
            "id": "http://milofultz.com/2020/08/19/soulja-realms",
            "title": "Soulja Realms",
            "summary": "I mashed up the Star Realms music with a bunch of Soulja Boy acapellas.",
            "content_text": "Listen hereMy brain started mashing together Crank Dat Soulja Boy with the first Star Realms song and I could not stop until they were all combined into one dumb megamix. If you don’t know Star Realms or Soulja Boy, this probably won’t make much sense, but you should at least check out Star Realms, because it’s a great deck-building game and a fun app to pass the time.",
            "content_html": "<p><a href=\"https://www.youtube.com/watch?v=xb6MV25Ktjc\"><img src=\"https://i.ytimg.com/vi/xb6MV25Ktjc/maxresdefault.jpg\" alt=\"Soulja Realms\" /></a></p><p><a href=\"https://www.youtube.com/watch?v=xb6MV25Ktjc\">Listen here</a></p><p>My brain started mashing together <a href=\"https://www.youtube.com/watch?v=8UFIYGkROII\">Crank Dat Soulja Boy</a> with the first Star Realms song and I could not stop until they were all combined into one dumb megamix. If you don’t know Star Realms or Soulja Boy, this probably won’t make much sense, but you should at least check out <a href=\"https://www.starrealms.com/\">Star Realms</a>, because it’s a great deck-building game and a fun app to pass the time.</p>",
            "url": "http://milofultz.com/2020/08/19/soulja-realms",
            
            
            
            
            
            "date_published": "2020-08-19T00:00:00-07:00",
            "date_modified": "2020-08-19T00:00:00-07:00",
            
                "author":  {
                "name": "Milo Fultz",
                "url": "http://milofultz.com",
                "avatar": null
                }
                
            
        },
    
        {
            "id": "http://milofultz.com/2020/08/04/piu-piu-ringtone",
            "title": "Piu Piu ringtone but it's only Avgustina's laugh",
            "summary": "Piu Piu ringtone but it's only Avgustina's laugh",
            "content_text": "I am starting a project to see how long my roommates and I can handle listening to Avgustina’s laugh as my text message notification sound. I set it to where it only does it when my partner messages me, but it should be horrible enough.You can download this atrocity as an m4r file here. Made using Mediahuman Audio Converter for OSX.",
            "content_html": "<p>I am starting a project to see how long my roommates and I can handle listening to Avgustina’s laugh as my text message notification sound. I set it to where it only does it when my partner messages me, but it should be horrible enough.</p><p>You can download this atrocity as an m4r file <a href=\"/assets/20200804PiuPiu.m4r\">here</a>. Made using Mediahuman Audio Converter for OSX.</p>",
            "url": "http://milofultz.com/2020/08/04/piu-piu-ringtone",
            
            
            
            
            
            "date_published": "2020-08-04T00:00:00-07:00",
            "date_modified": "2020-08-04T00:00:00-07:00",
            
                "author":  {
                "name": "Milo Fultz",
                "url": "http://milofultz.com",
                "avatar": null
                }
                
            
        },
    
        {
            "id": "http://milofultz.com/2020/07/23/awfulizer",
            "title": "Awfulizer - Make Surfing The Web Awful (Firefox Addon)",
            "summary": "I made this Firefox extension to see if I could do it, and I could. This extension cycles colors on every element 6 times per second.",
            "content_text": "You can get the add-on here and see the code on GitHub.Watch a video of it in action.While studying some CSS and HTML on FreeCodeCamp, I was trying to figure out how I could exercise some of the skills I was learning. One of the basics of CSS is just changing style of fonts and backgrounds, so I figured why not try and make some program that cycles all of those over and over? I found that making your first extension is very easy, so I tried it. After a ton of trial and error, I made a button that allows you to manually turn it on on a given tab, but you can only turn it off through refreshing it. I’ve added a static feature and the ability to choose (wow!) in v1.2. In the future, I’m hoping to add an option to turn it off once it starts.References:  https://developer.mozilla.org/en-US/docs/Mozilla/Add-ons/WebExtensions/Your_first_WebExtension",
            "content_html": "<p>You can get the add-on <a href=\"https://addons.mozilla.org/en-US/firefox/addon/awfulizer/\">here</a> and see the code on <a href=\"https://github.com/milofultz/awfulizer\">GitHub</a>.</p><p><a href=\"https://www.youtube.com/watch?v=dx7hZAAHFuk&amp;feature=youtu.be\">Watch a video of it in action.</a></p><p>While studying some CSS and HTML on <a href=\"https://www.freecodecamp.org/\">FreeCodeCamp</a>, I was trying to figure out how I could exercise some of the skills I was learning. One of the basics of CSS is just changing style of fonts and backgrounds, so I figured why not try and make some program that cycles all of those over and over? I found that <a href=\"https://developer.mozilla.org/en-US/docs/Mozilla/Add-ons/WebExtensions/Your_first_WebExtension\">making your first extension is very easy</a>, so I tried it. After a ton of trial and error, I made a button that allows you to manually turn it on on a given tab, but you can only turn it off through refreshing it. I’ve added a static feature and the ability to choose (wow!) in v1.2. In the future, I’m hoping to add an option to turn it off once it starts.</p><hr /><p>References:</p><ol>  <li>https://developer.mozilla.org/en-US/docs/Mozilla/Add-ons/WebExtensions/Your_first_WebExtension</li></ol>",
            "url": "http://milofultz.com/2020/07/23/awfulizer",
            
            
            
            
            
            "date_published": "2020-07-23T00:00:00-07:00",
            "date_modified": "2020-07-23T00:00:00-07:00",
            
                "author":  {
                "name": "Milo Fultz",
                "url": "http://milofultz.com",
                "avatar": null
                }
                
            
        },
    
        {
            "id": "http://milofultz.com/2020/07/22/make-python-apps",
            "title": "Make Python 'Apps' and Shortcuts To Run Them on OSX",
            "summary": "Using Automator and the built in Services of OSX, you can make simple Python apps run on command.",
            "content_text": "After experimenting with PyInstaller and Platypus to create a standalone app in OSX with no success, I went the much lower fidelity route. But it was successful, so I’m happy with it. YOu can see the script I made here.The goal of this was first to make a standalone app that will run Python script, but second to assign it to a keystroke. I have only tested this with running a Python script, but I can’t imagine it would be much more difficult for any other bash script. So here is the process:  Open Script Editor (in Applications/Utilities).      Using the do shell script command, add the script you want to run. Essentially, you’ll want to write in what you normally put into the Terminal, separated by semicolons.    do shell script \"cd 'path/to/script'; source venv/bin/activate; python main.py\"    Save this as an Application to your Applications folder (or wherever makes sense).  Close Script Editor. (If you don’t want to add a shortcut, you can stop here)  Open Automator (in Applications).  Create a “Quick Action” or “Service”, whatever one your OS says.  In the top bar, set the following setting: Workflow receives current no input in any application.  In the column second from the left, drag the “Launch Application” task into the “Drag actions or files here” area.  Select your application within that dropdown menu.  Save this with a memorable name.  Close Automator.  Open System Preferences and go to “Keyboard”.  Within this window, click “Shortcuts”.  Click on the “Services” menu on the left hand side.  Scroll to the bottom of the right window until you see your new service you created.  Double-click where it says ‘none’ and set a new shortcut (make sure it’s unique and won’t conflict with other programs or special characters. I chose ctrl+opt+shift+A). NOTE: If you don’t do the following steps, your shortcut will not work.  Close your System Preferences.  Click on Finder in your dock.  Open the Finder dropdown menu and go into Services. Click on your new service to run it manually.References:  https://www.makeuseof.com/tag/applescript-bash-scripts-apps/  https://discussions.apple.com/thread/5048120",
            "content_html": "<p>After experimenting with <a href=\"https://pyinstaller.readthedocs.io/en/stable/\">PyInstaller</a> and <a href=\"https://sveinbjorn.org/platypus\">Platypus</a> to create a standalone app in OSX with no success, I went the much lower fidelity route. But it was successful, so I’m happy with it. YOu can see the script I made <a href=\"https://github.com/milofultz/email_service/\">here</a>.</p><p>The goal of this was first to make a standalone app that will run Python script, but second to assign it to a keystroke. I have only tested this with running a Python script, but I can’t imagine it would be much more difficult for any other bash script. So here is the process:</p><ol>  <li>Open Script Editor (in Applications/Utilities).</li>  <li>    <p>Using the <code class=\"highlighter-rouge\">do shell script</code> command, add the script you want to run. Essentially, you’ll want to write in what you normally put into the Terminal, separated by semicolons.</p>    <p><code class=\"highlighter-rouge\">do shell script \"cd 'path/to/script'; source venv/bin/activate; python main.py\"</code></p>  </li>  <li>Save this as an Application to your Applications folder (or wherever makes sense).</li>  <li>Close Script Editor. <em>(If you don’t want to add a shortcut, you can stop here)</em></li>  <li>Open Automator (in Applications).</li>  <li>Create a “Quick Action” or “Service”, whatever one your OS says.</li>  <li>In the top bar, set the following setting: Workflow receives current <strong>no input</strong> in <strong>any application</strong>.</li>  <li>In the column second from the left, drag the “Launch Application” task into the “Drag actions or files here” area.</li>  <li>Select your application within that dropdown menu.</li>  <li>Save this with a memorable name.</li>  <li>Close Automator.</li>  <li>Open System Preferences and go to “Keyboard”.</li>  <li>Within this window, click “Shortcuts”.</li>  <li>Click on the “Services” menu on the left hand side.</li>  <li>Scroll to the bottom of the right window until you see your new service you created.</li>  <li>Double-click where it says ‘none’ and set a new shortcut (make sure it’s unique and won’t conflict with other programs or special characters. I chose <code class=\"highlighter-rouge\">ctrl+opt+shift+A</code>). <strong>NOTE: If you don’t do the following steps, your shortcut will not work.</strong></li>  <li>Close your System Preferences.</li>  <li>Click on Finder in your dock.</li>  <li>Open the Finder dropdown menu and go into Services. Click on your new service to run it manually.</li></ol><hr /><p>References:</p><ol>  <li><a href=\"https://www.makeuseof.com/tag/applescript-bash-scripts-apps/\">https://www.makeuseof.com/tag/applescript-bash-scripts-apps/</a></li>  <li><a href=\"https://discussions.apple.com/thread/5048120\">https://discussions.apple.com/thread/5048120</a></li></ol>",
            "url": "http://milofultz.com/2020/07/22/make-python-apps",
            
            
            
            
            
            "date_published": "2020-07-22T00:00:00-07:00",
            "date_modified": "2020-07-22T00:00:00-07:00",
            
                "author":  {
                "name": "Milo Fultz",
                "url": "http://milofultz.com",
                "avatar": null
                }
                
            
        },
    
        {
            "id": "http://milofultz.com/2020/07/18/programming-outline",
            "title": "Create a better program faster with an outline V2",
            "summary": "I've written so much spaghetti code for so long and finally learned from my roommate how to write better code. This is how I use this method.",
            "content_text": "This is an update of an older post: Create a better program faster with an outlineLike before, stay in abstract thinking as long as possible. The longer you take to implement your concepts, the better.Big Overview:  Understanding the Problem  Breaking It Down  Inspection  Development/TestingUnderstanding the Problem      Describe what the problem is in abstract terms as clearly as you can. What is the thing that you can’t do or isn’t happening right now?        Describe the solution to this problem in abstract terms as the desired result. Don’t worry about the how yet, just what the result will be.        Describe in abstract terms what things the program will do, as if it was a person doing it, not a computer. What are all of the smaller tasks within this bigger problem/solution?        From there, describe how your program will handle data on the way in and the way out (not within the program). What do you as the user want to give it and what do you want it to spit back out? Like when you give the dry cleaner your clothes: input is dirty clothes, output is clean clothes.  Breaking It Down      Break down the process further in abstract terms. What are the distinct actions the program will need to take to solve this problem? If you were asking a very pedantic person to do this task for you, what would you tell them?        What are the biggest distinct functions you can perceive in the description you just created?        Can you break these down further into sub-tasks? If so, go back to breaking it down (5.) in abstract terms until you can’t do it anymore.        With the many discrete functions you have, what data types would be best to give to and get from them?        Make a very rough outline of each function in your program using information from chunking steps. Include only necessary in/out information (e.g. if you are wanting to eat and the data type is ‘food’ and it will return ‘poop’: def eat(food): return poop)        Within these functions, write out an overview for each function. Write again for this ultra pedantic person.        See if you can break down elements of the functions into even smaller parts. The more that functions can be used and reused all around the whole program, the better.  Inspection      Once the program has been broken down into its most atomistic functions, start writing pseudocode into them to have an idea of what you’re going to do.        Look again for similarities in between functions and see if there is any process the functions could share. If so, then take that and break it down into it’s own function.        When you feel it has been fully broken down and the flow of data makes sense, create a basic outline of how the different functions will flow together from beginning to the end of the program. Do the data types match? If not, can you use a different data type? Is an adaptation needed between one function and another?  Development/Testing      Make a basic way to develop each function and test it as it goes (in Python, by adding an if __name__ == '__main__': section).        Figure out what is the easiest thing to program and test. Go with the pseudocode you’ve written and start fleshing it out with real functionality. Test each part as you go in the terminal.        Repeat this process with each element of your code, ensuring that it works exactly as you expect. You don’t have to go in a linear fashion, if it is easier or more sensible to jump around.        Don’t be afraid to go back to previous steps if you realize further possibilities of chunking or other revisions.  ",
            "content_html": "<p><em>This is an update of an older post: <a href=\"/2020/07/06/programming-outlining\">Create a better program faster with an outline</a></em></p><p>Like before, <strong>stay in abstract thinking as long as possible. The longer you take to implement your concepts, the better.</strong></p><h1 id=\"big-overview\">Big Overview:</h1><ul>  <li>Understanding the Problem</li>  <li>Breaking It Down</li>  <li>Inspection</li>  <li>Development/Testing</li></ul><hr /><h2 id=\"understanding-the-problem\">Understanding the Problem</h2><ol>  <li>    <p>Describe what the problem is in abstract terms as clearly as you can. What is the thing that you can’t do or isn’t happening right now?</p>  </li>  <li>    <p>Describe the solution to this problem in abstract terms as the desired result. Don’t worry about the how yet, just what the result will be.</p>  </li>  <li>    <p>Describe in abstract terms what things the program will do, as if it was a person doing it, not a computer. What are all of the smaller tasks within this bigger problem/solution?</p>  </li>  <li>    <p>From there, describe how your program will handle data on the way in and the way out (not within the program). What do you as the user want to give it and what do you want it to spit back out? Like when you give the dry cleaner your clothes: input is dirty clothes, output is clean clothes.</p>  </li></ol><h2 id=\"breaking-it-down\">Breaking It Down</h2><ol>  <li>    <p>Break down the process further in abstract terms. What are the distinct actions the program will need to take to solve this problem? If you were asking a very pedantic person to do this task for you, what would you tell them?</p>  </li>  <li>    <p>What are the biggest distinct functions you can perceive in the description you just created?</p>  </li>  <li>    <p>Can you break these down further into sub-tasks? If so, go back to breaking it down (5.) in abstract terms until you can’t do it anymore.</p>  </li>  <li>    <p>With the many discrete functions you have, what data types would be best to give to and get from them?</p>  </li>  <li>    <p>Make a very rough outline of each function in your program using information from chunking steps. Include only necessary in/out information (e.g. if you are wanting to eat and the data type is ‘food’ and it will return ‘poop’: <code class=\"highlighter-rouge\">def eat(food): return poop</code>)</p>  </li>  <li>    <p>Within these functions, write out an overview for each function. Write again for this ultra pedantic person.</p>  </li>  <li>    <p>See if you can break down elements of the functions into even smaller parts. The more that functions can be used and reused all around the whole program, the better.</p>  </li></ol><h2 id=\"inspection\">Inspection</h2><ol>  <li>    <p>Once the program has been broken down into its most atomistic functions, start writing pseudocode into them to have an idea of what you’re going to do.</p>  </li>  <li>    <p>Look again for similarities in between functions and see if there is any process the functions could share. If so, then take that and break it down into it’s own function.</p>  </li>  <li>    <p>When you feel it has been fully broken down and the flow of data makes sense, create a basic outline of how the different functions will flow together from beginning to the end of the program. Do the data types match? If not, can you use a different data type? Is an adaptation needed between one function and another?</p>  </li></ol><h2 id=\"developmenttesting\">Development/Testing</h2><ol>  <li>    <p>Make a basic way to develop each function and test it as it goes (in Python, by adding an <code class=\"highlighter-rouge\">if __name__ == '__main__':</code> section).</p>  </li>  <li>    <p>Figure out what is the easiest thing to program and test. Go with the pseudocode you’ve written and start fleshing it out with real functionality. Test each part as you go in the terminal.</p>  </li>  <li>    <p>Repeat this process with each element of your code, ensuring that it works exactly as you expect. You don’t have to go in a linear fashion, if it is easier or more sensible to jump around.</p>  </li>  <li>    <p>Don’t be afraid to go back to previous steps if you realize further possibilities of chunking or other revisions.</p>  </li></ol>",
            "url": "http://milofultz.com/2020/07/18/programming-outline",
            
            
            
            
            
            "date_published": "2020-07-18T00:00:00-07:00",
            "date_modified": "2020-07-18T00:00:00-07:00",
            
                "author":  {
                "name": "Milo Fultz",
                "url": "http://milofultz.com",
                "avatar": null
                }
                
            
        },
    
        {
            "id": "http://milofultz.com/2020/07/08/star-maker",
            "title": "star_maker - a lo-fi ambient visual (Python)",
            "summary": "star_maker - a lo-fi ambient visual (Python)",
            "content_text": "You can visit the project and download the files on GitHub.star_maker is a lo-fi screen saver or ambient visual using blessed. I originally made it so I could make a star visual for a page on my website and then mucked around and realized it offered me both a chance to mess around with blessed and a really funny but relatively simple challenge.It looks like this, but much more interesting.  20200708: Added color and more special characters  20200708: Added parallax effect in  c o l o r",
            "content_html": "<p><a href=\"https://github.com/milofultz/star_maker\">You can visit the project and download the files on GitHub.</a></p><p>star_maker is a lo-fi screen saver or ambient visual using blessed. I originally made it so I could make a star visual for <a href=\"/2020/07/07/spacelove\">a page on my website</a> and then mucked around and realized it offered me both a chance to mess around with <a href=\"https://github.com/jquast/blessed\">blessed</a> and a really funny but relatively simple challenge.</p><p>It looks like <a href=\"/2020/07/07/spacelove\">this</a>, but much more interesting.</p><ul>  <li><em>20200708: Added color and more special characters</em></li>  <li><em>20200708: Added parallax effect in  c o l o r</em></li></ul>",
            "url": "http://milofultz.com/2020/07/08/star-maker",
            
            
            
            
            
            "date_published": "2020-07-08T00:00:00-07:00",
            "date_modified": "2020-07-08T00:00:00-07:00",
            
                "author":  {
                "name": "Milo Fultz",
                "url": "http://milofultz.com",
                "avatar": null
                }
                
            
        },
    
        {
            "id": "http://milofultz.com/2020/07/07/spacelove",
            "title": "spacelove.xm",
            "summary": "spacelove.xm - Made in MilkyTracker with an old E-MAX sample",
            "content_text": "&nbsp;` &nbsp; &nbsp; ' . &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\" &nbsp; &nbsp; &nbsp; &nbsp;\" &nbsp; &nbsp; ` &nbsp; ` &nbsp;. , &nbsp; &nbsp;' &nbsp; &nbsp; &nbsp; + &nbsp; &nbsp; &nbsp; . &nbsp; \" &nbsp; &nbsp; ` &nbsp; &nbsp; &nbsp; &nbsp; , &nbsp; &nbsp; &nbsp;` &nbsp; &nbsp; &nbsp; &nbsp;' &nbsp;+ &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;, &nbsp; &nbsp; &nbsp;. &nbsp; &nbsp; &nbsp;+ &nbsp; &nbsp;, &nbsp; &nbsp; + &nbsp; &nbsp; &nbsp; &nbsp;' &nbsp; &nbsp; &nbsp;, &nbsp; &nbsp; &nbsp;\" &nbsp; &nbsp; &nbsp; , &nbsp; &nbsp; &nbsp; &nbsp; , &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;. &nbsp; &nbsp; &nbsp; &nbsp;` &nbsp; &nbsp; ` \" &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;` &nbsp; &nbsp;, &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;' &nbsp; &nbsp; &nbsp; &nbsp;` &nbsp; &nbsp; &nbsp; &nbsp; ' &nbsp; &nbsp; &nbsp; ' &nbsp; &nbsp; &nbsp; &nbsp;+ &nbsp; . &nbsp; + , ' &nbsp; &nbsp; &nbsp;+ &nbsp; &nbsp; &nbsp; &nbsp; \" &nbsp; &nbsp; &nbsp;. ` &nbsp; &nbsp; &nbsp;+ &nbsp; &nbsp; &nbsp; &nbsp;, &nbsp; &nbsp;` &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;' &nbsp; &nbsp; &nbsp; . &nbsp; &nbsp; \" &nbsp; &nbsp;. &nbsp; &nbsp; &nbsp;\" &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;. &nbsp; + . &nbsp; ` &nbsp; &nbsp; &nbsp; . &nbsp; &nbsp; &nbsp;. &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;. &nbsp; &nbsp;` &nbsp; &nbsp; &nbsp; &nbsp; \" &nbsp; &nbsp; &nbsp;, &nbsp; &nbsp; &nbsp; &nbsp; , &nbsp; &nbsp; &nbsp; &nbsp;' &nbsp; + &nbsp; &nbsp; &nbsp; &nbsp;' &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;. &nbsp; &nbsp; &nbsp; &nbsp; ' &nbsp;` &nbsp; &nbsp;` ' ` &nbsp; &nbsp;, + &nbsp; &nbsp; &nbsp;\" &nbsp; &nbsp; &nbsp; &nbsp;, &nbsp; &nbsp; &nbsp; &nbsp;. ` &nbsp; , &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;. . &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;. &nbsp; &nbsp; &nbsp; ' &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;. &nbsp; &nbsp; . &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;+ &nbsp; &nbsp; &nbsp; &nbsp; . &nbsp; &nbsp; &nbsp; , &nbsp; &nbsp; &nbsp; &nbsp; . &nbsp; &nbsp;+ &nbsp; ' &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;' &nbsp; &nbsp; &nbsp;` &nbsp;\" &nbsp; &nbsp; &nbsp;\" , &nbsp; &nbsp; &nbsp; \" &nbsp; &nbsp; &nbsp; &nbsp;\" &nbsp; &nbsp; &nbsp;` &nbsp; &nbsp; &nbsp;. &nbsp; &nbsp;' &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;` &nbsp; &nbsp; &nbsp; ` &nbsp; &nbsp; ' &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\" &nbsp; &nbsp;\" &nbsp; &nbsp; &nbsp; &nbsp;, &nbsp; &nbsp;' &nbsp; &nbsp;. &nbsp; &nbsp; ' &nbsp; &nbsp; &nbsp; &nbsp; , &nbsp; &nbsp; ' &nbsp; &nbsp; &nbsp; &nbsp;, , &nbsp; &nbsp; &nbsp; \" ' &nbsp; &nbsp; &nbsp; &nbsp; ' &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;, &nbsp; &nbsp;` &nbsp;` &nbsp; &nbsp; &nbsp; &nbsp; ' &nbsp; &nbsp;+ &nbsp; &nbsp; &nbsp; ' &nbsp; &nbsp; &nbsp; &nbsp;\" &nbsp;. &nbsp; ' &nbsp; &nbsp; . ' &nbsp; &nbsp; &nbsp; &nbsp;` &nbsp; &nbsp; &nbsp; &nbsp;, &nbsp;\" . &nbsp; &nbsp;\" &nbsp; &nbsp;+ &nbsp;+ &nbsp; &nbsp;\" + &nbsp; &nbsp; &nbsp; &nbsp;` &nbsp; &nbsp; &nbsp;+ , &nbsp; &nbsp; &nbsp; &nbsp; ' &nbsp; &nbsp;+ &nbsp; &nbsp;` &nbsp;, &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;+ &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;, &nbsp; &nbsp; &nbsp; &nbsp;. &nbsp; ` \" \" &nbsp; ' &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;' &nbsp; &nbsp; &nbsp; , &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;' &nbsp; &nbsp; , . &nbsp; &nbsp; &nbsp; &nbsp;` &nbsp; &nbsp; &nbsp; &nbsp; + . &nbsp; &nbsp; &nbsp; \" &nbsp; &nbsp; &nbsp;, ` &nbsp; &nbsp; &nbsp;, &nbsp; &nbsp; &nbsp; &nbsp; + ` &nbsp; &nbsp; \" &nbsp;. &nbsp; &nbsp; ' &nbsp; &nbsp; + &nbsp; + &nbsp; + \" &nbsp; &nbsp; &nbsp; &nbsp; + &nbsp; ' &nbsp; &nbsp;` &nbsp; &nbsp; &nbsp; &nbsp; ` &nbsp; &nbsp; &nbsp; &nbsp; . \" &nbsp; &nbsp;\" &nbsp; &nbsp; &nbsp; &nbsp;\" &nbsp; &nbsp; &nbsp; &nbsp; . &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;. &nbsp; &nbsp; &nbsp;\" &nbsp; &nbsp; &nbsp; &nbsp; ` &nbsp; &nbsp; + &nbsp; &nbsp; &nbsp; &nbsp; ' &nbsp; &nbsp; &nbsp;+ &nbsp; &nbsp;+ &nbsp; &nbsp; &nbsp; &nbsp;+ &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;` &nbsp; &nbsp; &nbsp; &nbsp; \" &nbsp; &nbsp; ' &nbsp; ` &nbsp; &nbsp; &nbsp;\" . &nbsp; &nbsp; &nbsp;+ &nbsp; ` &nbsp; &nbsp; &nbsp; ' &nbsp; ' &nbsp; \" \" &nbsp;\" &nbsp; &nbsp; &nbsp; ` &nbsp; &nbsp; &nbsp; &nbsp;+ &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;, &nbsp; &nbsp; &nbsp;' &nbsp; &nbsp; &nbsp; &nbsp; ' &nbsp;' &nbsp; &nbsp; + &nbsp; &nbsp; &nbsp; + &nbsp; &nbsp; &nbsp; &nbsp;+ &nbsp; &nbsp; ` &nbsp; &nbsp; &nbsp;, &nbsp; &nbsp; &nbsp; &nbsp; ` &nbsp; ` &nbsp; &nbsp; &nbsp;' &nbsp;. &nbsp; \" &nbsp; + . , &nbsp; &nbsp; &nbsp; &nbsp; ' &nbsp; , &nbsp; &nbsp; &nbsp; \" &nbsp; &nbsp; &nbsp; &nbsp;' &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;+ &nbsp; &nbsp;+ &nbsp; &nbsp; &nbsp;' . &nbsp; , &nbsp;\" &nbsp;. &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;, &nbsp;+ , &nbsp; &nbsp; ` &nbsp; &nbsp; &nbsp; ' &nbsp;\" &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;+ &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;' &nbsp; &nbsp; &nbsp; &nbsp; \" &nbsp; &nbsp; , &nbsp; &nbsp; ` ` &nbsp; &nbsp; &nbsp; &nbsp; \" &nbsp; . &nbsp; &nbsp; &nbsp;\" &nbsp; &nbsp; &nbsp;\" &nbsp;` &nbsp; &nbsp; &nbsp; . &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;. &nbsp; &nbsp; &nbsp; &nbsp;\" &nbsp;, &nbsp; &nbsp; ` &nbsp;` ` &nbsp; &nbsp; &nbsp;, &nbsp;' &nbsp;\" &nbsp; &nbsp; + &nbsp; &nbsp; &nbsp; + &nbsp; &nbsp; &nbsp; , &nbsp; &nbsp; &nbsp; \" &nbsp;, &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;. &nbsp;. &nbsp; &nbsp; ' ` &nbsp; &nbsp;+ &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;` &nbsp; &nbsp; &nbsp; &nbsp;` &nbsp; . &nbsp; &nbsp; + &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;. &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;. &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\" &nbsp; &nbsp; &nbsp; &nbsp; . &nbsp; &nbsp; &nbsp; &nbsp;' &nbsp; &nbsp; &nbsp; , &nbsp; &nbsp; &nbsp;+ &nbsp; &nbsp; &nbsp; + + &nbsp; &nbsp; &nbsp; &nbsp;+ &nbsp; &nbsp; &nbsp; , &nbsp; &nbsp; &nbsp; \" &nbsp; &nbsp; &nbsp;, &nbsp; &nbsp; ` &nbsp; &nbsp; &nbsp; &nbsp; , &nbsp; , &nbsp; &nbsp; ' &nbsp; &nbsp; &nbsp;, &nbsp; &nbsp; &nbsp; &nbsp;` &nbsp; &nbsp; + &nbsp; ' + &nbsp; &nbsp; &nbsp; + . + &nbsp; &nbsp; &nbsp; &nbsp;. &nbsp; &nbsp; &nbsp;+ &nbsp; &nbsp; &nbsp; &nbsp;\" &nbsp;. &nbsp; &nbsp; + &nbsp;+ &nbsp; &nbsp;' &nbsp; &nbsp; &nbsp; . &nbsp; &nbsp; + &nbsp; &nbsp; &nbsp; ' &nbsp; &nbsp; &nbsp;+ &nbsp; ' &nbsp; &nbsp; &nbsp; &nbsp; ` &nbsp;' &nbsp; &nbsp; &nbsp; &nbsp;+ &nbsp; &nbsp; &nbsp;. &nbsp; &nbsp; &nbsp;\" &nbsp; &nbsp;. &nbsp; &nbsp; &nbsp;, &nbsp; ' &nbsp; &nbsp; &nbsp;` &nbsp; &nbsp; &nbsp; &nbsp;` &nbsp; &nbsp; &nbsp;\" &nbsp;` &nbsp; ' &nbsp; &nbsp;, &nbsp;. &nbsp; &nbsp; &nbsp; &nbsp; , &nbsp;\" &nbsp; &nbsp; &nbsp;` &nbsp; &nbsp;' , ' &nbsp; &nbsp; &nbsp; &nbsp; . &nbsp; &nbsp;, &nbsp;. &nbsp; &nbsp; &nbsp; &nbsp; , ` &nbsp; &nbsp; &nbsp; &nbsp; . &nbsp; &nbsp; &nbsp; ' &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;' &nbsp; &nbsp; &nbsp; \" &nbsp; &nbsp; &nbsp; &nbsp; , &nbsp; &nbsp; &nbsp; &nbsp; , &nbsp; &nbsp; &nbsp; , &nbsp; &nbsp;` &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\" &nbsp; &nbsp;` &nbsp;+ &nbsp;` &nbsp; &nbsp; &nbsp;. &nbsp; &nbsp; &nbsp; ` &nbsp; &nbsp; &nbsp;\" &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;` &nbsp; ' \" + &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;` &nbsp; &nbsp; &nbsp;+ ' &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;+ &nbsp;, &nbsp; &nbsp; &nbsp; &nbsp;, &nbsp; &nbsp; &nbsp; . &nbsp; &nbsp; &nbsp; &nbsp;` &nbsp; &nbsp; &nbsp;+ , . &nbsp; &nbsp; , &nbsp; &nbsp; &nbsp; &nbsp; + &nbsp; + &nbsp; &nbsp;+ &nbsp; &nbsp; &nbsp; &nbsp; \" &nbsp; &nbsp; + &nbsp; &nbsp; &nbsp; &nbsp;, &nbsp; &nbsp; &nbsp; ` &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\" , &nbsp; &nbsp; &nbsp;, &nbsp;` &nbsp; &nbsp; &nbsp;+ &nbsp; &nbsp; &nbsp; &nbsp;, ' ' &nbsp; ` \" &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;. &nbsp; &nbsp; &nbsp; &nbsp;' &nbsp; \" &nbsp;' &nbsp;` \" &nbsp; &nbsp; &nbsp; &nbsp;\" &nbsp; &nbsp; &nbsp; &nbsp; ` &nbsp; &nbsp; &nbsp; &nbsp; ' &nbsp; &nbsp; &nbsp; &nbsp; , &nbsp; &nbsp;\" &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;, &nbsp; &nbsp; &nbsp; &nbsp; + &nbsp; &nbsp; ` \" &nbsp; &nbsp; &nbsp; &nbsp; ' &nbsp;` &nbsp; ' &nbsp; &nbsp; &nbsp;+ &nbsp; &nbsp; . &nbsp; &nbsp; &nbsp; \" &nbsp; `  Your browser does not support the audio element.Download the XM file here &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;' &nbsp; &nbsp; &nbsp; &nbsp;+ &nbsp;+ &nbsp; . &nbsp; &nbsp; &nbsp; &nbsp;, &nbsp; &nbsp; &nbsp;+ &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;. &nbsp; &nbsp; &nbsp; &nbsp;` &nbsp; &nbsp; &nbsp; &nbsp; ` &nbsp; &nbsp; &nbsp; &nbsp; . &nbsp; &nbsp; &nbsp;, &nbsp; &nbsp; &nbsp;+ &nbsp; + &nbsp; &nbsp;` &nbsp; &nbsp; &nbsp; + &nbsp; &nbsp; &nbsp; &nbsp;' &nbsp; &nbsp; &nbsp; \" &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;` &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;' &nbsp; &nbsp; &nbsp; + &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;+ &nbsp; + &nbsp; &nbsp;+ &nbsp;+ &nbsp; &nbsp; + &nbsp; &nbsp; ' &nbsp; &nbsp; &nbsp; &nbsp; \" &nbsp; &nbsp; &nbsp;` &nbsp; &nbsp;, &nbsp; &nbsp; \" &nbsp; , &nbsp; &nbsp; &nbsp;. &nbsp; &nbsp; &nbsp; &nbsp;+ ` &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;. &nbsp; &nbsp;` &nbsp; &nbsp; &nbsp; , &nbsp; &nbsp; &nbsp; &nbsp;' &nbsp; &nbsp; &nbsp; &nbsp;. &nbsp; &nbsp; + &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;, &nbsp; &nbsp;' &nbsp; &nbsp; &nbsp; &nbsp;. &nbsp; + &nbsp;. &nbsp; &nbsp; &nbsp;, &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;+ &nbsp; &nbsp; &nbsp; &nbsp; ' &nbsp; &nbsp;, &nbsp; &nbsp; &nbsp; &nbsp; . &nbsp; &nbsp; &nbsp; &nbsp; ' &nbsp; &nbsp;` &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;. &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;` &nbsp; + , &nbsp; &nbsp; &nbsp; &nbsp; , &nbsp; &nbsp; &nbsp;+ &nbsp; &nbsp; &nbsp; &nbsp;` &nbsp; ' &nbsp; &nbsp; &nbsp; &nbsp;+ &nbsp; + &nbsp; &nbsp;' &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;` &nbsp; &nbsp; &nbsp; &nbsp; ' &nbsp; &nbsp; &nbsp;\" &nbsp; &nbsp; &nbsp; &nbsp;, &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\" &nbsp; &nbsp; &nbsp; &nbsp;\" &nbsp; &nbsp; &nbsp; &nbsp; . &nbsp; &nbsp; &nbsp; &nbsp;+ &nbsp; . . &nbsp; &nbsp; &nbsp; &nbsp; + &nbsp; &nbsp; &nbsp; + &nbsp;, &nbsp; &nbsp; &nbsp; + &nbsp; &nbsp; &nbsp; &nbsp;\" ' &nbsp; &nbsp;+ &nbsp; &nbsp;. &nbsp; &nbsp; &nbsp; &nbsp; ' &nbsp; &nbsp; &nbsp; , &nbsp; &nbsp;+ &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;` &nbsp; &nbsp; &nbsp; ` &nbsp;+ &nbsp; &nbsp; &nbsp; &nbsp;\" &nbsp; &nbsp;, &nbsp; &nbsp; \" &nbsp; &nbsp; ' &nbsp; + ` &nbsp; &nbsp; &nbsp; &nbsp;. &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;' &nbsp; &nbsp;, &nbsp; &nbsp; &nbsp; &nbsp; ` &nbsp;` &nbsp; , &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;` ` &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;. &nbsp; ' &nbsp; . &nbsp; &nbsp; ` &nbsp; + , &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;+ &nbsp; &nbsp; &nbsp;. &nbsp; &nbsp; . &nbsp; &nbsp;\" &nbsp; &nbsp; &nbsp; ` &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;' &nbsp; &nbsp; &nbsp;\" + &nbsp; &nbsp; &nbsp; \" &nbsp; &nbsp; &nbsp;+ &nbsp; . &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;+ &nbsp; &nbsp; &nbsp;. &nbsp;, &nbsp;. &nbsp; &nbsp; ` &nbsp; &nbsp;, &nbsp; &nbsp; &nbsp; &nbsp; ' &nbsp; &nbsp; &nbsp; \" &nbsp; &nbsp; &nbsp; &nbsp;, &nbsp; &nbsp; &nbsp; \" &nbsp;, &nbsp; &nbsp; &nbsp; , &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;. &nbsp; &nbsp; &nbsp; &nbsp; ` &nbsp; &nbsp; &nbsp; &nbsp; \" &nbsp;\" &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;' &nbsp;' &nbsp;\" &nbsp; &nbsp;. &nbsp; &nbsp; , &nbsp; &nbsp;' &nbsp; . &nbsp; &nbsp; &nbsp;' &nbsp;, &nbsp; &nbsp; &nbsp;` &nbsp; &nbsp; &nbsp; ` &nbsp; &nbsp; &nbsp;, &nbsp;\" &nbsp; , &nbsp; &nbsp; , &nbsp; &nbsp; &nbsp; &nbsp;` &nbsp; &nbsp; + &nbsp; &nbsp; \" &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;, &nbsp;. &nbsp; &nbsp; &nbsp; &nbsp;' &nbsp; + &nbsp; ' &nbsp; &nbsp; &nbsp;. &nbsp; &nbsp;. &nbsp; &nbsp;+ &nbsp; &nbsp; &nbsp; + &nbsp; &nbsp; &nbsp; &nbsp;\" &nbsp; &nbsp; &nbsp; &nbsp;. &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;. &nbsp; &nbsp;. &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;` &nbsp; &nbsp; &nbsp;\" &nbsp; &nbsp; , &nbsp; &nbsp; &nbsp; &nbsp;, + &nbsp; &nbsp; ` &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;. &nbsp; &nbsp; &nbsp;, &nbsp; &nbsp; &nbsp; &nbsp; \" &nbsp; &nbsp; &nbsp; &nbsp; ` &nbsp;\" &nbsp;' &nbsp; &nbsp; &nbsp; \" &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\" &nbsp; &nbsp; &nbsp; &nbsp;, &nbsp; , \" &nbsp; ' &nbsp; ' &nbsp;+ &nbsp; &nbsp; &nbsp; &nbsp;\" &nbsp; &nbsp; ' &nbsp; &nbsp; &nbsp; &nbsp; + &nbsp; &nbsp; , &nbsp;` &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;` &nbsp; &nbsp; &nbsp; &nbsp;` &nbsp; &nbsp; &nbsp; &nbsp;` &nbsp; ' &nbsp;, &nbsp; &nbsp; &nbsp; &nbsp;, &nbsp; &nbsp;' &nbsp; &nbsp; &nbsp;' &nbsp; &nbsp; &nbsp; &nbsp;' &nbsp; &nbsp; + &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;` &nbsp; &nbsp;, . &nbsp; &nbsp; &nbsp; , &nbsp; &nbsp;' ` &nbsp;` &nbsp; &nbsp; &nbsp; &nbsp;` ` &nbsp; &nbsp; &nbsp;. &nbsp; &nbsp; &nbsp; &nbsp;. &nbsp; &nbsp; &nbsp;` &nbsp;' &nbsp;\" &nbsp; \" &nbsp; &nbsp; &nbsp; &nbsp;\" &nbsp;\" &nbsp; &nbsp;+ &nbsp; &nbsp; &nbsp; &nbsp;+ &nbsp; &nbsp; &nbsp; &nbsp;\" &nbsp; &nbsp; &nbsp; &nbsp;` &nbsp; &nbsp; + &nbsp; &nbsp; \" &nbsp; &nbsp; &nbsp; , &nbsp; . &nbsp; &nbsp; &nbsp; &nbsp; + ' \" &nbsp; &nbsp; &nbsp; ' &nbsp; &nbsp;+ &nbsp;. \" &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\" &nbsp;, &nbsp;. &nbsp; . &nbsp; &nbsp; &nbsp; &nbsp; \" &nbsp; &nbsp; &nbsp;+ \" &nbsp; &nbsp; &nbsp; &nbsp; + &nbsp;+ &nbsp; &nbsp; ' ` &nbsp;' &nbsp;+ &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;, &nbsp; ' , &nbsp; &nbsp; , &nbsp; &nbsp; ` &nbsp;+ &nbsp; ` ' &nbsp; &nbsp; &nbsp;` &nbsp; &nbsp;` &nbsp; &nbsp; . &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;+ &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;+ &nbsp; &nbsp; &nbsp; ' + &nbsp; \" &nbsp; &nbsp; \" &nbsp; &nbsp; &nbsp; &nbsp; + &nbsp; &nbsp;' , &nbsp; &nbsp; &nbsp; &nbsp; ` &nbsp; &nbsp;\" &nbsp; &nbsp; &nbsp; &nbsp;' &nbsp; &nbsp; &nbsp; ` &nbsp;\" &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;+ &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\" &nbsp; &nbsp; &nbsp; &nbsp; ` &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;, &nbsp; &nbsp; &nbsp; &nbsp;, &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;' &nbsp;+ &nbsp; &nbsp; &nbsp; &nbsp; . &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;+ &nbsp; &nbsp;' &nbsp;\" &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\" ' &nbsp; ' &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;+ &nbsp; &nbsp; &nbsp; &nbsp;, &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;` , &nbsp; &nbsp;, &nbsp; &nbsp; ' &nbsp; &nbsp; &nbsp; &nbsp;' &nbsp; &nbsp; + &nbsp; &nbsp; &nbsp; &nbsp;. &nbsp;\" &nbsp; &nbsp;. &nbsp;' &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;+ &nbsp; &nbsp;' &nbsp;+ &nbsp; &nbsp; &nbsp;+ &nbsp; &nbsp; &nbsp; &nbsp;, &nbsp; &nbsp; ` &nbsp; &nbsp; &nbsp; . &nbsp; + + &nbsp; &nbsp; ' &nbsp; &nbsp; &nbsp;\" &nbsp; &nbsp; &nbsp;\" &nbsp; &nbsp; &nbsp; &nbsp; . &nbsp; ' + &nbsp;. &nbsp; + + &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;' &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;' &nbsp;+ \" &nbsp;' &nbsp; &nbsp; &nbsp; &nbsp; , &nbsp; &nbsp; &nbsp;\" &nbsp; , &nbsp; &nbsp;, &nbsp; &nbsp; &nbsp; &nbsp; ' &nbsp; &nbsp; + &nbsp; \" &nbsp; &nbsp; &nbsp; , &nbsp;+ &nbsp; , &nbsp;, &nbsp; &nbsp; , &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;' &nbsp; &nbsp; &nbsp; ' &nbsp; &nbsp; &nbsp; &nbsp; , &nbsp; &nbsp; &nbsp; \" &nbsp;\" &nbsp; &nbsp; &nbsp; &nbsp; + &nbsp; &nbsp; &nbsp; . &nbsp; &nbsp; &nbsp;+ &nbsp; &nbsp; &nbsp; &nbsp; \" &nbsp; &nbsp; &nbsp; &nbsp; + , &nbsp; &nbsp; &nbsp;+ &nbsp; &nbsp; &nbsp; &nbsp;` ' &nbsp; &nbsp; \" &nbsp; &nbsp; &nbsp; &nbsp;' &nbsp; &nbsp; \" &nbsp; . &nbsp; &nbsp;` &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;. &nbsp; &nbsp; &nbsp; ` &nbsp; &nbsp; &nbsp;+ &nbsp; &nbsp;` &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;, &nbsp; , &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\" &nbsp; &nbsp; ` &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\" \" &nbsp; &nbsp; &nbsp; + &nbsp; &nbsp; &nbsp;' &nbsp; &nbsp; &nbsp; ` &nbsp; &nbsp; &nbsp; &nbsp;\" &nbsp; &nbsp; &nbsp;, ` &nbsp; &nbsp; &nbsp; + &nbsp;` &nbsp; &nbsp; . &nbsp; &nbsp; &nbsp; &nbsp;. &nbsp; &nbsp;' , &nbsp; &nbsp; &nbsp; &nbsp; + &nbsp; &nbsp; &nbsp; &nbsp;\" &nbsp; . &nbsp; . &nbsp; &nbsp; &nbsp; &nbsp; , &nbsp; &nbsp; &nbsp; &nbsp; + &nbsp; &nbsp; &nbsp; &nbsp;+ &nbsp;+ &nbsp; ` &nbsp; &nbsp; &nbsp;, &nbsp;' &nbsp; &nbsp; &nbsp; &nbsp;, + &nbsp; &nbsp; &nbsp; &nbsp;` ' &nbsp; &nbsp; , &nbsp; &nbsp; . &nbsp;' &nbsp; &nbsp; &nbsp;+ &nbsp; &nbsp;`",
            "content_html": "<p class=\"stars\">&nbsp;` &nbsp; &nbsp; ' . &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\" &nbsp; &nbsp; &nbsp; &nbsp;\" &nbsp; &nbsp; ` &nbsp; ` &nbsp;. , &nbsp; &nbsp;' &nbsp; &nbsp; &nbsp; + &nbsp; &nbsp; &nbsp; . &nbsp; \" &nbsp; &nbsp; ` &nbsp; &nbsp; &nbsp; &nbsp; , &nbsp; &nbsp; &nbsp;` &nbsp; &nbsp; &nbsp; &nbsp;' &nbsp;+ &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;, &nbsp; &nbsp; &nbsp;. &nbsp; &nbsp; &nbsp;+ &nbsp; &nbsp;, &nbsp; &nbsp; + &nbsp; &nbsp; &nbsp; &nbsp;' &nbsp; &nbsp; &nbsp;, &nbsp; &nbsp; &nbsp;\" &nbsp; &nbsp; &nbsp; , &nbsp; &nbsp; &nbsp; &nbsp; , &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;. &nbsp; &nbsp; &nbsp; &nbsp;` &nbsp; &nbsp; ` \" &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;` &nbsp; &nbsp;, &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;' &nbsp; &nbsp; &nbsp; &nbsp;` &nbsp; &nbsp; &nbsp; &nbsp; ' &nbsp; &nbsp; &nbsp; ' &nbsp; &nbsp; &nbsp; &nbsp;+ &nbsp; . &nbsp; + , ' &nbsp; &nbsp; &nbsp;+ &nbsp; &nbsp; &nbsp; &nbsp; \" &nbsp; &nbsp; &nbsp;. ` &nbsp; &nbsp; &nbsp;+ &nbsp; &nbsp; &nbsp; &nbsp;, &nbsp; &nbsp;` &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;' &nbsp; &nbsp; &nbsp; . &nbsp; &nbsp; \" &nbsp; &nbsp;. &nbsp; &nbsp; &nbsp;\" &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;. &nbsp; + . &nbsp; ` &nbsp; &nbsp; &nbsp; . &nbsp; &nbsp; &nbsp;. &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;. &nbsp; &nbsp;` &nbsp; &nbsp; &nbsp; &nbsp; \" &nbsp; &nbsp; &nbsp;, &nbsp; &nbsp; &nbsp; &nbsp; , &nbsp; &nbsp; &nbsp; &nbsp;' &nbsp; + &nbsp; &nbsp; &nbsp; &nbsp;' &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;. &nbsp; &nbsp; &nbsp; &nbsp; ' &nbsp;` &nbsp; &nbsp;` ' ` &nbsp; &nbsp;, + &nbsp; &nbsp; &nbsp;\" &nbsp; &nbsp; &nbsp; &nbsp;, &nbsp; &nbsp; &nbsp; &nbsp;. ` &nbsp; , &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;. . &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;. &nbsp; &nbsp; &nbsp; ' &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;. &nbsp; &nbsp; . &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;+ &nbsp; &nbsp; &nbsp; &nbsp; . &nbsp; &nbsp; &nbsp; , &nbsp; &nbsp; &nbsp; &nbsp; . &nbsp; &nbsp;+ &nbsp; ' &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;' &nbsp; &nbsp; &nbsp;` &nbsp;\" &nbsp; &nbsp; &nbsp;\" , &nbsp; &nbsp; &nbsp; \" &nbsp; &nbsp; &nbsp; &nbsp;\" &nbsp; &nbsp; &nbsp;` &nbsp; &nbsp; &nbsp;. &nbsp; &nbsp;' &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;` &nbsp; &nbsp; &nbsp; ` &nbsp; &nbsp; ' &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\" &nbsp; &nbsp;\" &nbsp; &nbsp; &nbsp; &nbsp;, &nbsp; &nbsp;' &nbsp; &nbsp;. &nbsp; &nbsp; ' &nbsp; &nbsp; &nbsp; &nbsp; , &nbsp; &nbsp; ' &nbsp; &nbsp; &nbsp; &nbsp;, , &nbsp; &nbsp; &nbsp; \" ' &nbsp; &nbsp; &nbsp; &nbsp; ' &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;, &nbsp; &nbsp;` &nbsp;` &nbsp; &nbsp; &nbsp; &nbsp; ' &nbsp; &nbsp;+ &nbsp; &nbsp; &nbsp; ' &nbsp; &nbsp; &nbsp; &nbsp;\" &nbsp;. &nbsp; ' &nbsp; &nbsp; . ' &nbsp; &nbsp; &nbsp; &nbsp;` &nbsp; &nbsp; &nbsp; &nbsp;, &nbsp;\" . &nbsp; &nbsp;\" &nbsp; &nbsp;+ &nbsp;+ &nbsp; &nbsp;\" + &nbsp; &nbsp; &nbsp; &nbsp;` &nbsp; &nbsp; &nbsp;+ , &nbsp; &nbsp; &nbsp; &nbsp; ' &nbsp; &nbsp;+ &nbsp; &nbsp;` &nbsp;, &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;+ &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;, &nbsp; &nbsp; &nbsp; &nbsp;. &nbsp; ` \" \" &nbsp; ' &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;' &nbsp; &nbsp; &nbsp; , &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;' &nbsp; &nbsp; , . &nbsp; &nbsp; &nbsp; &nbsp;` &nbsp; &nbsp; &nbsp; &nbsp; + . &nbsp; &nbsp; &nbsp; \" &nbsp; &nbsp; &nbsp;, ` &nbsp; &nbsp; &nbsp;, &nbsp; &nbsp; &nbsp; &nbsp; + ` &nbsp; &nbsp; \" &nbsp;. &nbsp; &nbsp; ' &nbsp; &nbsp; + &nbsp; + &nbsp; + \" &nbsp; &nbsp; &nbsp; &nbsp; + &nbsp; ' &nbsp; &nbsp;` &nbsp; &nbsp; &nbsp; &nbsp; ` &nbsp; &nbsp; &nbsp; &nbsp; . \" &nbsp; &nbsp;\" &nbsp; &nbsp; &nbsp; &nbsp;\" &nbsp; &nbsp; &nbsp; &nbsp; . &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;. &nbsp; &nbsp; &nbsp;\" &nbsp; &nbsp; &nbsp; &nbsp; ` &nbsp; &nbsp; + &nbsp; &nbsp; &nbsp; &nbsp; ' &nbsp; &nbsp; &nbsp;+ &nbsp; &nbsp;+ &nbsp; &nbsp; &nbsp; &nbsp;+ &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;` &nbsp; &nbsp; &nbsp; &nbsp; \" &nbsp; &nbsp; ' &nbsp; ` &nbsp; &nbsp; &nbsp;\" . &nbsp; &nbsp; &nbsp;+ &nbsp; ` &nbsp; &nbsp; &nbsp; ' &nbsp; ' &nbsp; \" \" &nbsp;\" &nbsp; &nbsp; &nbsp; ` &nbsp; &nbsp; &nbsp; &nbsp;+ &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;, &nbsp; &nbsp; &nbsp;' &nbsp; &nbsp; &nbsp; &nbsp; ' &nbsp;' &nbsp; &nbsp; + &nbsp; &nbsp; &nbsp; + &nbsp; &nbsp; &nbsp; &nbsp;+ &nbsp; &nbsp; ` &nbsp; &nbsp; &nbsp;, &nbsp; &nbsp; &nbsp; &nbsp; ` &nbsp; ` &nbsp; &nbsp; &nbsp;' &nbsp;. &nbsp; \" &nbsp; + . , &nbsp; &nbsp; &nbsp; &nbsp; ' &nbsp; , &nbsp; &nbsp; &nbsp; \" &nbsp; &nbsp; &nbsp; &nbsp;' &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;+ &nbsp; &nbsp;+ &nbsp; &nbsp; &nbsp;' . &nbsp; , &nbsp;\" &nbsp;. &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;, &nbsp;+ , &nbsp; &nbsp; ` &nbsp; &nbsp; &nbsp; ' &nbsp;\" &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;+ &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;' &nbsp; &nbsp; &nbsp; &nbsp; \" &nbsp; &nbsp; , &nbsp; &nbsp; ` ` &nbsp; &nbsp; &nbsp; &nbsp; \" &nbsp; . &nbsp; &nbsp; &nbsp;\" &nbsp; &nbsp; &nbsp;\" &nbsp;` &nbsp; &nbsp; &nbsp; . &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;. &nbsp; &nbsp; &nbsp; &nbsp;\" &nbsp;, &nbsp; &nbsp; ` &nbsp;` ` &nbsp; &nbsp; &nbsp;, &nbsp;' &nbsp;\" &nbsp; &nbsp; + &nbsp; &nbsp; &nbsp; + &nbsp; &nbsp; &nbsp; , &nbsp; &nbsp; &nbsp; \" &nbsp;, &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;. &nbsp;. &nbsp; &nbsp; ' ` &nbsp; &nbsp;+ &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;` &nbsp; &nbsp; &nbsp; &nbsp;` &nbsp; . &nbsp; &nbsp; + &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;. &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;. &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\" &nbsp; &nbsp; &nbsp; &nbsp; . &nbsp; &nbsp; &nbsp; &nbsp;' &nbsp; &nbsp; &nbsp; , &nbsp; &nbsp; &nbsp;+ &nbsp; &nbsp; &nbsp; + + &nbsp; &nbsp; &nbsp; &nbsp;+ &nbsp; &nbsp; &nbsp; , &nbsp; &nbsp; &nbsp; \" &nbsp; &nbsp; &nbsp;, &nbsp; &nbsp; ` &nbsp; &nbsp; &nbsp; &nbsp; , &nbsp; , &nbsp; &nbsp; ' &nbsp; &nbsp; &nbsp;, &nbsp; &nbsp; &nbsp; &nbsp;` &nbsp; &nbsp; + &nbsp; ' + &nbsp; &nbsp; &nbsp; + . + &nbsp; &nbsp; &nbsp; &nbsp;. &nbsp; &nbsp; &nbsp;+ &nbsp; &nbsp; &nbsp; &nbsp;\" &nbsp;. &nbsp; &nbsp; + &nbsp;+ &nbsp; &nbsp;' &nbsp; &nbsp; &nbsp; . &nbsp; &nbsp; + &nbsp; &nbsp; &nbsp; ' &nbsp; &nbsp; &nbsp;+ &nbsp; ' &nbsp; &nbsp; &nbsp; &nbsp; ` &nbsp;' &nbsp; &nbsp; &nbsp; &nbsp;+ &nbsp; &nbsp; &nbsp;. &nbsp; &nbsp; &nbsp;\" &nbsp; &nbsp;. &nbsp; &nbsp; &nbsp;, &nbsp; ' &nbsp; &nbsp; &nbsp;` &nbsp; &nbsp; &nbsp; &nbsp;` &nbsp; &nbsp; &nbsp;\" &nbsp;` &nbsp; ' &nbsp; &nbsp;, &nbsp;. &nbsp; &nbsp; &nbsp; &nbsp; , &nbsp;\" &nbsp; &nbsp; &nbsp;` &nbsp; &nbsp;' , ' &nbsp; &nbsp; &nbsp; &nbsp; . &nbsp; &nbsp;, &nbsp;. &nbsp; &nbsp; &nbsp; &nbsp; , ` &nbsp; &nbsp; &nbsp; &nbsp; . &nbsp; &nbsp; &nbsp; ' &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;' &nbsp; &nbsp; &nbsp; \" &nbsp; &nbsp; &nbsp; &nbsp; , &nbsp; &nbsp; &nbsp; &nbsp; , &nbsp; &nbsp; &nbsp; , &nbsp; &nbsp;` &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\" &nbsp; &nbsp;` &nbsp;+ &nbsp;` &nbsp; &nbsp; &nbsp;. &nbsp; &nbsp; &nbsp; ` &nbsp; &nbsp; &nbsp;\" &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;` &nbsp; ' \" + &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;` &nbsp; &nbsp; &nbsp;+ ' &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;+ &nbsp;, &nbsp; &nbsp; &nbsp; &nbsp;, &nbsp; &nbsp; &nbsp; . &nbsp; &nbsp; &nbsp; &nbsp;` &nbsp; &nbsp; &nbsp;+ , . &nbsp; &nbsp; , &nbsp; &nbsp; &nbsp; &nbsp; + &nbsp; + &nbsp; &nbsp;+ &nbsp; &nbsp; &nbsp; &nbsp; \" &nbsp; &nbsp; + &nbsp; &nbsp; &nbsp; &nbsp;, &nbsp; &nbsp; &nbsp; ` &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\" , &nbsp; &nbsp; &nbsp;, &nbsp;` &nbsp; &nbsp; &nbsp;+ &nbsp; &nbsp; &nbsp; &nbsp;, ' ' &nbsp; ` \" &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;. &nbsp; &nbsp; &nbsp; &nbsp;' &nbsp; \" &nbsp;' &nbsp;` \" &nbsp; &nbsp; &nbsp; &nbsp;\" &nbsp; &nbsp; &nbsp; &nbsp; ` &nbsp; &nbsp; &nbsp; &nbsp; ' &nbsp; &nbsp; &nbsp; &nbsp; , &nbsp; &nbsp;\" &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;, &nbsp; &nbsp; &nbsp; &nbsp; + &nbsp; &nbsp; ` \" &nbsp; &nbsp; &nbsp; &nbsp; ' &nbsp;` &nbsp; ' &nbsp; &nbsp; &nbsp;+ &nbsp; &nbsp; . &nbsp; &nbsp; &nbsp; \" &nbsp; `</p><p><br /></p><audio controls=\"\">  <source src=\"http://milofultz.com/assets/20200707spacelove.mp3\" type=\"audio/mpeg\" />Your browser does not support the audio element.</audio><p><a href=\"http://milofultz.com/assets/20200707spacelove.xm\">Download the XM file here</a></p><p><br /></p><p class=\"stars\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;' &nbsp; &nbsp; &nbsp; &nbsp;+ &nbsp;+ &nbsp; . &nbsp; &nbsp; &nbsp; &nbsp;, &nbsp; &nbsp; &nbsp;+ &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;. &nbsp; &nbsp; &nbsp; &nbsp;` &nbsp; &nbsp; &nbsp; &nbsp; ` &nbsp; &nbsp; &nbsp; &nbsp; . &nbsp; &nbsp; &nbsp;, &nbsp; &nbsp; &nbsp;+ &nbsp; + &nbsp; &nbsp;` &nbsp; &nbsp; &nbsp; + &nbsp; &nbsp; &nbsp; &nbsp;' &nbsp; &nbsp; &nbsp; \" &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;` &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;' &nbsp; &nbsp; &nbsp; + &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;+ &nbsp; + &nbsp; &nbsp;+ &nbsp;+ &nbsp; &nbsp; + &nbsp; &nbsp; ' &nbsp; &nbsp; &nbsp; &nbsp; \" &nbsp; &nbsp; &nbsp;` &nbsp; &nbsp;, &nbsp; &nbsp; \" &nbsp; , &nbsp; &nbsp; &nbsp;. &nbsp; &nbsp; &nbsp; &nbsp;+ ` &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;. &nbsp; &nbsp;` &nbsp; &nbsp; &nbsp; , &nbsp; &nbsp; &nbsp; &nbsp;' &nbsp; &nbsp; &nbsp; &nbsp;. &nbsp; &nbsp; + &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;, &nbsp; &nbsp;' &nbsp; &nbsp; &nbsp; &nbsp;. &nbsp; + &nbsp;. &nbsp; &nbsp; &nbsp;, &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;+ &nbsp; &nbsp; &nbsp; &nbsp; ' &nbsp; &nbsp;, &nbsp; &nbsp; &nbsp; &nbsp; . &nbsp; &nbsp; &nbsp; &nbsp; ' &nbsp; &nbsp;` &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;. &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;` &nbsp; + , &nbsp; &nbsp; &nbsp; &nbsp; , &nbsp; &nbsp; &nbsp;+ &nbsp; &nbsp; &nbsp; &nbsp;` &nbsp; ' &nbsp; &nbsp; &nbsp; &nbsp;+ &nbsp; + &nbsp; &nbsp;' &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;` &nbsp; &nbsp; &nbsp; &nbsp; ' &nbsp; &nbsp; &nbsp;\" &nbsp; &nbsp; &nbsp; &nbsp;, &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\" &nbsp; &nbsp; &nbsp; &nbsp;\" &nbsp; &nbsp; &nbsp; &nbsp; . &nbsp; &nbsp; &nbsp; &nbsp;+ &nbsp; . . &nbsp; &nbsp; &nbsp; &nbsp; + &nbsp; &nbsp; &nbsp; + &nbsp;, &nbsp; &nbsp; &nbsp; + &nbsp; &nbsp; &nbsp; &nbsp;\" ' &nbsp; &nbsp;+ &nbsp; &nbsp;. &nbsp; &nbsp; &nbsp; &nbsp; ' &nbsp; &nbsp; &nbsp; , &nbsp; &nbsp;+ &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;` &nbsp; &nbsp; &nbsp; ` &nbsp;+ &nbsp; &nbsp; &nbsp; &nbsp;\" &nbsp; &nbsp;, &nbsp; &nbsp; \" &nbsp; &nbsp; ' &nbsp; + ` &nbsp; &nbsp; &nbsp; &nbsp;. &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;' &nbsp; &nbsp;, &nbsp; &nbsp; &nbsp; &nbsp; ` &nbsp;` &nbsp; , &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;` ` &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;. &nbsp; ' &nbsp; . &nbsp; &nbsp; ` &nbsp; + , &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;+ &nbsp; &nbsp; &nbsp;. &nbsp; &nbsp; . &nbsp; &nbsp;\" &nbsp; &nbsp; &nbsp; ` &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;' &nbsp; &nbsp; &nbsp;\" + &nbsp; &nbsp; &nbsp; \" &nbsp; &nbsp; &nbsp;+ &nbsp; . &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;+ &nbsp; &nbsp; &nbsp;. &nbsp;, &nbsp;. &nbsp; &nbsp; ` &nbsp; &nbsp;, &nbsp; &nbsp; &nbsp; &nbsp; ' &nbsp; &nbsp; &nbsp; \" &nbsp; &nbsp; &nbsp; &nbsp;, &nbsp; &nbsp; &nbsp; \" &nbsp;, &nbsp; &nbsp; &nbsp; , &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;. &nbsp; &nbsp; &nbsp; &nbsp; ` &nbsp; &nbsp; &nbsp; &nbsp; \" &nbsp;\" &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;' &nbsp;' &nbsp;\" &nbsp; &nbsp;. &nbsp; &nbsp; , &nbsp; &nbsp;' &nbsp; . &nbsp; &nbsp; &nbsp;' &nbsp;, &nbsp; &nbsp; &nbsp;` &nbsp; &nbsp; &nbsp; ` &nbsp; &nbsp; &nbsp;, &nbsp;\" &nbsp; , &nbsp; &nbsp; , &nbsp; &nbsp; &nbsp; &nbsp;` &nbsp; &nbsp; + &nbsp; &nbsp; \" &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;, &nbsp;. &nbsp; &nbsp; &nbsp; &nbsp;' &nbsp; + &nbsp; ' &nbsp; &nbsp; &nbsp;. &nbsp; &nbsp;. &nbsp; &nbsp;+ &nbsp; &nbsp; &nbsp; + &nbsp; &nbsp; &nbsp; &nbsp;\" &nbsp; &nbsp; &nbsp; &nbsp;. &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;. &nbsp; &nbsp;. &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;` &nbsp; &nbsp; &nbsp;\" &nbsp; &nbsp; , &nbsp; &nbsp; &nbsp; &nbsp;, + &nbsp; &nbsp; ` &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;. &nbsp; &nbsp; &nbsp;, &nbsp; &nbsp; &nbsp; &nbsp; \" &nbsp; &nbsp; &nbsp; &nbsp; ` &nbsp;\" &nbsp;' &nbsp; &nbsp; &nbsp; \" &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\" &nbsp; &nbsp; &nbsp; &nbsp;, &nbsp; , \" &nbsp; ' &nbsp; ' &nbsp;+ &nbsp; &nbsp; &nbsp; &nbsp;\" &nbsp; &nbsp; ' &nbsp; &nbsp; &nbsp; &nbsp; + &nbsp; &nbsp; , &nbsp;` &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;` &nbsp; &nbsp; &nbsp; &nbsp;` &nbsp; &nbsp; &nbsp; &nbsp;` &nbsp; ' &nbsp;, &nbsp; &nbsp; &nbsp; &nbsp;, &nbsp; &nbsp;' &nbsp; &nbsp; &nbsp;' &nbsp; &nbsp; &nbsp; &nbsp;' &nbsp; &nbsp; + &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;` &nbsp; &nbsp;, . &nbsp; &nbsp; &nbsp; , &nbsp; &nbsp;' ` &nbsp;` &nbsp; &nbsp; &nbsp; &nbsp;` ` &nbsp; &nbsp; &nbsp;. &nbsp; &nbsp; &nbsp; &nbsp;. &nbsp; &nbsp; &nbsp;` &nbsp;' &nbsp;\" &nbsp; \" &nbsp; &nbsp; &nbsp; &nbsp;\" &nbsp;\" &nbsp; &nbsp;+ &nbsp; &nbsp; &nbsp; &nbsp;+ &nbsp; &nbsp; &nbsp; &nbsp;\" &nbsp; &nbsp; &nbsp; &nbsp;` &nbsp; &nbsp; + &nbsp; &nbsp; \" &nbsp; &nbsp; &nbsp; , &nbsp; . &nbsp; &nbsp; &nbsp; &nbsp; + ' \" &nbsp; &nbsp; &nbsp; ' &nbsp; &nbsp;+ &nbsp;. \" &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\" &nbsp;, &nbsp;. &nbsp; . &nbsp; &nbsp; &nbsp; &nbsp; \" &nbsp; &nbsp; &nbsp;+ \" &nbsp; &nbsp; &nbsp; &nbsp; + &nbsp;+ &nbsp; &nbsp; ' ` &nbsp;' &nbsp;+ &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;, &nbsp; ' , &nbsp; &nbsp; , &nbsp; &nbsp; ` &nbsp;+ &nbsp; ` ' &nbsp; &nbsp; &nbsp;` &nbsp; &nbsp;` &nbsp; &nbsp; . &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;+ &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;+ &nbsp; &nbsp; &nbsp; ' + &nbsp; \" &nbsp; &nbsp; \" &nbsp; &nbsp; &nbsp; &nbsp; + &nbsp; &nbsp;' , &nbsp; &nbsp; &nbsp; &nbsp; ` &nbsp; &nbsp;\" &nbsp; &nbsp; &nbsp; &nbsp;' &nbsp; &nbsp; &nbsp; ` &nbsp;\" &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;+ &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\" &nbsp; &nbsp; &nbsp; &nbsp; ` &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;, &nbsp; &nbsp; &nbsp; &nbsp;, &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;' &nbsp;+ &nbsp; &nbsp; &nbsp; &nbsp; . &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;+ &nbsp; &nbsp;' &nbsp;\" &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\" ' &nbsp; ' &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;+ &nbsp; &nbsp; &nbsp; &nbsp;, &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;` , &nbsp; &nbsp;, &nbsp; &nbsp; ' &nbsp; &nbsp; &nbsp; &nbsp;' &nbsp; &nbsp; + &nbsp; &nbsp; &nbsp; &nbsp;. &nbsp;\" &nbsp; &nbsp;. &nbsp;' &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;+ &nbsp; &nbsp;' &nbsp;+ &nbsp; &nbsp; &nbsp;+ &nbsp; &nbsp; &nbsp; &nbsp;, &nbsp; &nbsp; ` &nbsp; &nbsp; &nbsp; . &nbsp; + + &nbsp; &nbsp; ' &nbsp; &nbsp; &nbsp;\" &nbsp; &nbsp; &nbsp;\" &nbsp; &nbsp; &nbsp; &nbsp; . &nbsp; ' + &nbsp;. &nbsp; + + &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;' &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;' &nbsp;+ \" &nbsp;' &nbsp; &nbsp; &nbsp; &nbsp; , &nbsp; &nbsp; &nbsp;\" &nbsp; , &nbsp; &nbsp;, &nbsp; &nbsp; &nbsp; &nbsp; ' &nbsp; &nbsp; + &nbsp; \" &nbsp; &nbsp; &nbsp; , &nbsp;+ &nbsp; , &nbsp;, &nbsp; &nbsp; , &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;' &nbsp; &nbsp; &nbsp; ' &nbsp; &nbsp; &nbsp; &nbsp; , &nbsp; &nbsp; &nbsp; \" &nbsp;\" &nbsp; &nbsp; &nbsp; &nbsp; + &nbsp; &nbsp; &nbsp; . &nbsp; &nbsp; &nbsp;+ &nbsp; &nbsp; &nbsp; &nbsp; \" &nbsp; &nbsp; &nbsp; &nbsp; + , &nbsp; &nbsp; &nbsp;+ &nbsp; &nbsp; &nbsp; &nbsp;` ' &nbsp; &nbsp; \" &nbsp; &nbsp; &nbsp; &nbsp;' &nbsp; &nbsp; \" &nbsp; . &nbsp; &nbsp;` &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;. &nbsp; &nbsp; &nbsp; ` &nbsp; &nbsp; &nbsp;+ &nbsp; &nbsp;` &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;, &nbsp; , &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\" &nbsp; &nbsp; ` &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\" \" &nbsp; &nbsp; &nbsp; + &nbsp; &nbsp; &nbsp;' &nbsp; &nbsp; &nbsp; ` &nbsp; &nbsp; &nbsp; &nbsp;\" &nbsp; &nbsp; &nbsp;, ` &nbsp; &nbsp; &nbsp; + &nbsp;` &nbsp; &nbsp; . &nbsp; &nbsp; &nbsp; &nbsp;. &nbsp; &nbsp;' , &nbsp; &nbsp; &nbsp; &nbsp; + &nbsp; &nbsp; &nbsp; &nbsp;\" &nbsp; . &nbsp; . &nbsp; &nbsp; &nbsp; &nbsp; , &nbsp; &nbsp; &nbsp; &nbsp; + &nbsp; &nbsp; &nbsp; &nbsp;+ &nbsp;+ &nbsp; ` &nbsp; &nbsp; &nbsp;, &nbsp;' &nbsp; &nbsp; &nbsp; &nbsp;, + &nbsp; &nbsp; &nbsp; &nbsp;` ' &nbsp; &nbsp; , &nbsp; &nbsp; . &nbsp;' &nbsp; &nbsp; &nbsp;+ &nbsp; &nbsp;`</p>",
            "url": "http://milofultz.com/2020/07/07/spacelove",
            
            
            
            
            
            "date_published": "2020-07-07T00:00:00-07:00",
            "date_modified": "2020-07-07T00:00:00-07:00",
            
                "author":  {
                "name": "Milo Fultz",
                "url": "http://milofultz.com",
                "avatar": null
                }
                
            
        },
    
        {
            "id": "http://milofultz.com/2020/07/06/programming-outlining",
            "title": "Create a better program faster with an outline",
            "summary": "I've written so much spaghetti code for so long and finally learned from my roommate how to write better code. This is how I use this method.",
            "content_text": "An updated version can be found here: Create a better program faster with an outline V2I’ve written so much spaghetti code for so long and finally learned from my roommate how to write better code. This is how I use this method.First, stay in abstract thinking as long as possible. The longer you take to implement your concepts, the better.For this example, I will use my Bookmark Crawler idea, which was written in Python.Big PictureDescribe what your program will do in abstract terms, as if it was a person doing it, not a computer.  The bookmark crawler will go through your bookmarks and make a list of all the links it can find. Then it will go through all of those links, repeating the process and making an even bigger list of links. After doing this, it will make an HTML file that you can look at and click around.From there, describe how your program will handle data. Start BIG as possible.  The bookmark crawler will take an HTML file of your bookmarks as input and output an HTML file of new links to check out.ChunkingBreak down the process further in abstract terms. What are the distinct actions it will need to take? What would a random stupid guy need if you wanted him to do it?  The bookmark crawler will start by opening your bookmarks file and searching for links. These links, along with their titles, will be added to a list. This list will then be sent off to be crawled. This crawling process will be: opening each page that was found in the bookmarks; opening all the links on the page; and copying down all the links with their titles. This process is repeated with the new links that are found X amount of times, whatever the user determines. Once the crawling process is finished, then a list of these new links will be added to an HTML page for browsing.Determine the biggest distinct functions you can perceive in the description you just created.      Input: Take bookmark file and turn it into a list of links that the program can use.    Crawler: Crawl new links from the bookmark, as well as further links received, taking down needed info.    Export: Make all new links usable in a user-friendly file.  What data types would be best to transfer in between these functions?      Input - IN: HTML file, OUT: List containing relevant information from bookmarks.    Crawler - IN: List of bookmarks info from Input, OUT: List of new links information.    Export - IN: List of new links information, OUT: HTML file.  Outlining FunctionsMake a very rough outline of the program using information from chunking steps. Include only necessary in/out information.# Input: Take bookmark file and turn it into a list of links that the program can use.# IN: HTML file, OUT: List containing relevant information from bookmarks.def input(filename):\turl_list = []\treturn url_list\t# Crawler: Crawl new links from the bookmark, as well as further links received, taking down needed info.# IN: List of bookmarks info from Input, OUT: List of new links information.def crawler(urls):\tfound_urls = []\treturn found_urls\t# Export: Make all new links usable in a user-friendly file.# IN: List of new links information, OUT: HTML file.def export(urls):\t# Pseudocode: create pretty HTML file of new links.\tpassWrite out overview for each function as if you were telling a random stupid guy to do it.  Input: Open the file. Go through the whole file looking for links. Copy down all URLs, titles, and include that you found the link on the bookmarks page. When finished, compile it into a document that can be handled by the Crawler.Do this for all functions and see how you can break down the process into atomistic functions. The more that functions can be used and reused all around the whole program, the better.Once the program has been broken down into its most atomistic functions, start writing pseudocode into them to have an idea of what you’re going to do.# Input: Take bookmark file and turn it into a list of links that the program can use.# IN: HTML file, OUT: List containing relevant information from bookmarks.def input(filename):\t#Open the file\t#Go through the whole file looking for links\t#Copy down all URLs, titles, and include that\t#you found the link on the bookmarks page.\t#Compile it into a document that can be \t#handled by the Crawler\turl_list = []\treturn url_listFurther ChunkingLook for similarities in between functions and see if there is any process the functions could share. If so, then take that and break it down into it’s own function. (e.g. in this program, both the crawler and the input need to take all the links off of a given page)TestingWhen you feel it has been broken down fully and the flow of data makes sense, make a basic way to test it as it goes. In Python, this is by adding an if __name__ == '__main__': section. Start with more pseudocode and continue with it until you feel that you can correctly write out the flow using the functions you’ve already created.Start Writing CodeFigure out what is the easiest thing to program and test. Go with the pseudocode you’ve written and start fleshing it out with real functionality. Test each part as you go in the terminal. In the following example, I’ll first test that I can open a file and return the contents of the file.# Input: Take bookmark file and turn it into a list of links that the program can use.# IN: HTML file, OUT: List containing relevant information from bookmarks.def input(filename):\t#Open the file\twith open(filename, 'r') as f:\t\thtml = f.read()\t#Go through the whole file looking for links\t#Copy down all URLs, titles, and include that\t#you found the link on the bookmarks page.\t#Compile it into a document that can be \t#handled by the Crawler\turl_list = []\t# return url_list\treturn html\tif __name__ = '__main__':\tprint(input('bookmarks.html'))\t############Terminal############$ python3 bm_crawl.py&lt;html&gt;\t&lt;head&gt;\t...\t&lt;/body&gt;&lt;/html&gt;$Repeat this process with each element of your code, ensuring that it works exactly as you expect. You don’t have to go in a linear fashion, if it is easier or more sensible to jump around.Don’t be afraid to go back to previous steps if you realize further possibilities of chunking or other revisions.",
            "content_html": "<p><em>An updated version can be found here: <a href=\"/2020/07/18/programming-outline\">Create a better program faster with an outline V2</a></em></p><p>I’ve written so much spaghetti code for so long and finally learned from my roommate how to write better code. This is how I use this method.</p><p>First, <strong>stay in abstract thinking as long as possible. The longer you take to implement your concepts, the better.</strong></p><p>For this example, I will use my <a href=\"/2020/07/02/bmcrawl\">Bookmark Crawler</a> idea, which was written in Python.</p><hr /><h2 id=\"big-picture\">Big Picture</h2><p>Describe what your program will do in abstract terms, as if it was a person doing it, not a computer.</p><blockquote>  <p>The bookmark crawler will go through your bookmarks and make a list of all the links it can find. Then it will go through all of <em>those</em> links, repeating the process and making an even bigger list of links. After doing this, it will make an HTML file that you can look at and click around.</p></blockquote><p>From there, describe how your program will handle data. Start BIG as possible.</p><blockquote>  <p>The bookmark crawler will take an HTML file of your bookmarks as input and output an HTML file of new links to check out.</p></blockquote><h2 id=\"chunking\">Chunking</h2><p>Break down the process further in abstract terms. What are the distinct actions it will need to take? What would a random stupid guy need if you wanted him to do it?</p><blockquote>  <p>The bookmark crawler will start by opening your bookmarks file and searching for links. These links, along with their titles, will be added to a list. This list will then be sent off to be crawled. This crawling process will be: opening each page that was found in the bookmarks; opening all the links on the page; and copying down all the links with their titles. This process is repeated with the new links that are found X amount of times, whatever the user determines. Once the crawling process is finished, then a list of these new links will be added to an HTML page for browsing.</p></blockquote><p>Determine the biggest distinct functions you can perceive in the description you just created.</p><blockquote>  <ul>    <li><strong>Input</strong>: Take bookmark file and turn it into a list of links that the program can use.</li>    <li><strong>Crawler</strong>: Crawl new links from the bookmark, as well as further links received, taking down needed info.</li>    <li><strong>Export</strong>: Make all new links usable in a user-friendly file.</li>  </ul></blockquote><p>What data types would be best to transfer in between these functions?</p><blockquote>  <ul>    <li><strong>Input</strong> - IN: HTML file, OUT: List containing relevant information from bookmarks.</li>    <li><strong>Crawler</strong> - IN: List of bookmarks info from Input, OUT: List of new links information.</li>    <li><strong>Export</strong> - IN: List of new links information, OUT: HTML file.</li>  </ul></blockquote><h2 id=\"outlining-functions\">Outlining Functions</h2><p>Make a very rough outline of the program using information from chunking steps. Include only necessary in/out information.</p><div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code># Input: Take bookmark file and turn it into a list of links that the program can use.# IN: HTML file, OUT: List containing relevant information from bookmarks.def input(filename):\turl_list = []\treturn url_list\t# Crawler: Crawl new links from the bookmark, as well as further links received, taking down needed info.# IN: List of bookmarks info from Input, OUT: List of new links information.def crawler(urls):\tfound_urls = []\treturn found_urls\t# Export: Make all new links usable in a user-friendly file.# IN: List of new links information, OUT: HTML file.def export(urls):\t# Pseudocode: create pretty HTML file of new links.\tpass</code></pre></div></div><p>Write out overview for each function as if you were telling a random stupid guy to do it.</p><blockquote>  <p>Input: Open the file. Go through the whole file looking for links. Copy down all URLs, titles, and include that you found the link on the bookmarks page. When finished, compile it into a document that can be handled by the Crawler.</p></blockquote><p>Do this for all functions and see how you can break down the process into atomistic functions. The more that functions can be used and reused all around the whole program, the better.</p><p>Once the program has been broken down into its most atomistic functions, start writing pseudocode into them to have an idea of what you’re going to do.</p><div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code># Input: Take bookmark file and turn it into a list of links that the program can use.# IN: HTML file, OUT: List containing relevant information from bookmarks.def input(filename):\t#Open the file\t#Go through the whole file looking for links\t#Copy down all URLs, titles, and include that\t#you found the link on the bookmarks page.\t#Compile it into a document that can be \t#handled by the Crawler\turl_list = []\treturn url_list</code></pre></div></div><h2 id=\"further-chunking\">Further Chunking</h2><p>Look for similarities in between functions and see if there is any process the functions could share. If so, then take that and break it down into it’s own function. (e.g. in this program, both the crawler and the input need to take all the links off of a given page)</p><h2 id=\"testing\">Testing</h2><p>When you feel it has been broken down fully and the flow of data makes sense, make a basic way to test it as it goes. In Python, this is by adding an <code class=\"highlighter-rouge\">if __name__ == '__main__':</code> section. Start with more pseudocode and continue with it until you feel that you can correctly write out the flow using the functions you’ve already created.</p><h2 id=\"start-writing-code\">Start Writing Code</h2><p>Figure out what is the easiest thing to program and test. Go with the pseudocode you’ve written and start fleshing it out with real functionality. Test each part as you go in the terminal. In the following example, I’ll first test that I can open a file and return the contents of the file.</p><div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code># Input: Take bookmark file and turn it into a list of links that the program can use.# IN: HTML file, OUT: List containing relevant information from bookmarks.def input(filename):\t#Open the file\twith open(filename, 'r') as f:\t\thtml = f.read()\t#Go through the whole file looking for links\t#Copy down all URLs, titles, and include that\t#you found the link on the bookmarks page.\t#Compile it into a document that can be \t#handled by the Crawler\turl_list = []\t# return url_list\treturn html\tif __name__ = '__main__':\tprint(input('bookmarks.html'))\t############Terminal############$ python3 bm_crawl.py<span class=\"nt\">&lt;html&gt;</span>\t<span class=\"nt\">&lt;head&gt;</span>\t...\t<span class=\"nt\">&lt;/body&gt;</span><span class=\"nt\">&lt;/html&gt;</span>$</code></pre></div></div><p>Repeat this process with each element of your code, ensuring that it works exactly as you expect. You don’t have to go in a linear fashion, if it is easier or more sensible to jump around.</p><p>Don’t be afraid to go back to previous steps if you realize further possibilities of chunking or other revisions.</p>",
            "url": "http://milofultz.com/2020/07/06/programming-outlining",
            
            
            
            
            
            "date_published": "2020-07-06T00:00:00-07:00",
            "date_modified": "2020-07-06T00:00:00-07:00",
            
                "author":  {
                "name": "Milo Fultz",
                "url": "http://milofultz.com",
                "avatar": null
                }
                
            
        },
    
        {
            "id": "http://milofultz.com/2020/07/03/wordsmash",
            "title": "Wordsmash Explosion - Mastermind With Words (Python)",
            "summary": "This game is Mastermind but with words. Guess a random word chosen by the computer based on how many letters there are in common.",
            "content_text": "You can visit the project and download the files on GitHub.The GameThe easiest way to think of this game is as Mastermind but with words. You can see a more detailed explanation of the rules here.The program will pick a random 5 letter word that the user will try to guess. The user will guess a 5 letter word and the program will return how many of the letters from the user’s word exist in the random word. This process will repeat until the user guesses the word correctly.Future Implementation  Different word lengths as a measure of difficulty.  Options for keeping tabs on which letters you’ve guessed. Implemented 20200708  Hints.",
            "content_html": "<p><a href=\"https://github.com/milofultz/wordmastermind\">You can visit the project and download the files on GitHub.</a></p><h2 id=\"the-game\">The Game</h2><p>The easiest way to think of this game is as Mastermind but with words. <a href=\"https://www.word-grabber.com/printable-word-games/a-mastermind-with-words-jotto\">You can see a more detailed explanation of the rules here.</a></p><p>The program will pick a random 5 letter word that the user will try to guess. The user will guess a 5 letter word and the program will return how many of the letters from the user’s word exist in the random word. This process will repeat until the user guesses the word correctly.</p><hr /><h2 id=\"future-implementation\">Future Implementation</h2><ul>  <li>Different word lengths as a measure of difficulty.</li>  <li><del>Options for keeping tabs on which letters you’ve guessed.</del> <em>Implemented 20200708</em></li>  <li>Hints.</li></ul>",
            "url": "http://milofultz.com/2020/07/03/wordsmash",
            
            
            
            
            
            "date_published": "2020-07-03T00:00:00-07:00",
            "date_modified": "2020-07-03T00:00:00-07:00",
            
                "author":  {
                "name": "Milo Fultz",
                "url": "http://milofultz.com",
                "avatar": null
                }
                
            
        },
    
        {
            "id": "http://milofultz.com/2020/07/02/bmcrawl",
            "title": "Bookmark Crawler - Make Internet More Fun (Python)",
            "summary": "This is a program that utilizes a set of URL's to create a specific set of links based on the sites that you already liked enough to bookmark it.",
            "content_text": "You can find the updated project and all necessary files here on GitHub.GoalSearch engines are too broad and do not serve people who search for interesting and curated content that does not have relevant keywords. For example, searching “DIY Projects” will not yield interesting results, as those SEO search terms are saturated by bigger scale organizations and make finding smaller creators and curators much more difficult. As the internet gets larger and larger, this will only be more of a problem with modern search engines, as their algorithm rewards good SEO and Alexa rankings, which is determined not necessarily by quality of content, but by linking and optimization.So if you want to find interesting and curated content regarding DIY projects, how can you find them? This is an experiment that utilizes given URL’s to create an extremely specific set of links based on the sites that you already like. Hopefully this will provide the user with new domains and pages to explore that are related and recommended within the provided pages.How  Take a single URL or a user’s bookmarks (exported from Firefox as an HTML file) and create a list of URLs to scrape.  Scrape each URL for links.  Allow process to repeat up to N degrees away from initial source URL.  Return an HTML file of new sites to explore.",
            "content_html": "<p><a href=\"https://github.com/milofultz/bmcrawl\">You can find the updated project and all necessary files here on GitHub.</a></p><h2 id=\"goal\">Goal</h2><p>Search engines are too broad and do not serve people who search for interesting and curated content that does not have relevant keywords. For example, searching “DIY Projects” will not yield interesting results, as those SEO search terms are saturated by bigger scale organizations and make finding smaller creators and curators much more difficult. As the internet gets larger and larger, this will only be more of a problem with modern search engines, as their algorithm rewards good SEO and Alexa rankings, which is determined not necessarily by quality of content, but by linking and optimization.</p><p>So if you want to find interesting and curated content regarding DIY projects, how can you find them? This is an experiment that utilizes given URL’s to create an extremely specific set of links based on the sites that you already like. Hopefully this will provide the user with new domains and pages to explore that are related and recommended within the provided pages.</p><h2 id=\"how\">How</h2><ul>  <li>Take a single URL or a user’s bookmarks (exported from Firefox as an HTML file) and create a list of URLs to scrape.</li>  <li>Scrape each URL for links.</li>  <li>Allow process to repeat up to N degrees away from initial source URL.</li>  <li>Return an HTML file of new sites to explore.</li></ul>",
            "url": "http://milofultz.com/2020/07/02/bmcrawl",
            
            
            
            
            
            "date_published": "2020-07-02T00:00:00-07:00",
            "date_modified": "2020-07-02T00:00:00-07:00",
            
                "author":  {
                "name": "Milo Fultz",
                "url": "http://milofultz.com",
                "avatar": null
                }
                
            
        },
    
        {
            "id": "http://milofultz.com/2020/06/26/nobody-takes-advice",
            "title": "Nobody Takes Advice",
            "summary": "The great, unspoken secret of advice is that no one takes it. ... People always just do exactly what they want to do in every scenario. - Nicole Cliffe",
            "content_text": "  “The great, unspoken secret of advice is that no one takes it. … People always just do exactly what they want to do in every scenario.” - Nicole Cliffe[1]References:  https://www.elle.com/life-love/advice/a46441/nicole-knows-how-do-i-support-my-friends-when-they-make-bad-choices/",
            "content_html": "<blockquote>  <p>“The great, unspoken secret of advice is that no one takes it. … People always just do exactly what they want to do in every scenario.” - Nicole Cliffe[1]</p></blockquote><hr /><p>References:</p><ol>  <li><a href=\"https://www.elle.com/life-love/advice/a46441/nicole-knows-how-do-i-support-my-friends-when-they-make-bad-choices/\">https://www.elle.com/life-love/advice/a46441/nicole-knows-how-do-i-support-my-friends-when-they-make-bad-choices/</a></li></ol>",
            "url": "http://milofultz.com/2020/06/26/nobody-takes-advice",
            
            
            
            
            
            "date_published": "2020-06-26T00:00:00-07:00",
            "date_modified": "2020-06-26T00:00:00-07:00",
            
                "author":  {
                "name": "Milo Fultz",
                "url": "http://milofultz.com",
                "avatar": null
                }
                
            
        },
    
        {
            "id": "http://milofultz.com/2020/06/25/inexpensive-games",
            "title": "Inexpensive and Minimal Equipment Games To Spend Time On",
            "summary": "I've always been interested in being frugal and wanted a repository of fun and inexpensive games to play by yourself and with others.",
            "content_text": "I’ve always been interested in being frugal and wanted a repository of fun and inexpensive games to play by yourself and with others. Here’s a list of what I’ve found.Solo  Donsol - Donsol is a solitaire card game made by John Eternal during Train Jam using a regular playing card deck. I found this on Hundred Rabbit’s Youtube channel and thought it looked like a fun game for solo play that made solitaire a lot more interesting. The rules are a bit confusing so be sure to watch the video and see them play it through.  Canfield - When I was on a cruise ship for a week for a gig, I literally played this game for probably upwards of 7 hours and I think I won once. For some reason, I keep coming back to it.  Alpha Blitz - Not really a “game” but a good way to pass time. Find a word and then figure out the longest anagram you can using only those letters (lens = senselessness).2+ Player  Word Mastermind/Jotto - I played this a ton with a friend of mine in our down time in college. Super easy to play and you don’t really need anything except a paper and pencil, unless you have a good memory. It’s pretty much just the game mastermind but with words instead. I made a Python version of this, which you can find here.  Paper Football - Aside from the obvious of kicking it, the tabletop play of this game is so fun and makes waiting in a place with a floor or table much more fun. All you need is some scrap paper and a surface.  Exquisite Corpse - Total absurdity and chaos through drawing. Only need a pen and paper and will create a wide range of stuff, from silly pictures to nightmare fuel.  Monkey Tree (video) - This is almost a workout more than it’s a game, but nonetheless a fun way to spend time. One person stands arms out to their sides with legs wide, stable on the ground. The other person climbs on their back and finds ways to maneuver around them. Tougher than it seems, both physically and for your friendship.  Domine (video) - Another one from Hundred Rabbits. All you need is a double 9 domino set. Super quick and fun!",
            "content_html": "<p>I’ve always been interested in being frugal and wanted a repository of fun and inexpensive games to play by yourself and with others. Here’s a list of what I’ve found.</p><h3 id=\"solo\">Solo</h3><ul>  <li><a href=\"https://itch.io/t/54944/donsol-guide\">Donsol</a> - Donsol is a solitaire card game made by John Eternal during Train Jam using a regular playing card deck. I found this on <a href=\"https://www.youtube.com/watch?v=GNoZrr56GqA\">Hundred Rabbit’s Youtube channel</a> and thought it looked like a fun game for solo play that made solitaire a lot more interesting. The rules are a bit confusing so be sure to watch the video and see them play it through.</li>  <li><a href=\"https://en.wikipedia.org/wiki/Canfield_(solitaire)\">Canfield</a> - When I was on a cruise ship for a week for a gig, I literally played this game for probably upwards of 7 hours and I think I won once. For some reason, I keep coming back to it.</li>  <li><a href=\"https://boardgamegeek.com/boardgame/1443/alpha-blitz\">Alpha Blitz</a> - Not really a “game” but a good way to pass time. Find a word and then figure out the longest anagram you can using only those letters (lens = senselessness).</li></ul><h3 id=\"2-player\">2+ Player</h3><ul>  <li><a href=\"https://www.word-grabber.com/printable-word-games/a-mastermind-with-words-jotto\">Word Mastermind/Jotto</a> - I played this a ton with a friend of mine in our down time in college. Super easy to play and you don’t really need anything except a paper and pencil, unless you have a good memory. It’s pretty much just the game mastermind but with words instead. <a href=\"/2020/07/03/wordsmash\">I made a Python version of this, which you can find here.</a></li>  <li><a href=\"https://en.wikipedia.org/wiki/Paper_football\">Paper Football</a> - Aside from the obvious of kicking it, the tabletop play of this game is so fun and makes waiting in a place with a floor or table much more fun. All you need is some scrap paper and a surface.</li>  <li><a href=\"https://en.wikipedia.org/wiki/Exquisite_corpse\">Exquisite Corpse</a> - Total absurdity and chaos through drawing. Only need a pen and paper and will create a wide range of stuff, from silly pictures to nightmare fuel.</li>  <li><a href=\"http://athleticexplorations.com/en_US/ae96/\">Monkey Tree</a> (<a href=\"https://www.youtube.com/watch?v=hXVRyI2ULHI\">video</a>) - This is almost a workout more than it’s a game, but nonetheless a fun way to spend time. One person stands arms out to their sides with legs wide, stable on the ground. The other person climbs on their back and finds ways to maneuver around them. Tougher than it seems, both physically and for your friendship.</li>  <li><a href=\"/2020/09/01/domine\">Domine</a> (<a href=\"https://www.youtube.com/watch?v=fjZb190qn00\">video</a>) - Another one from Hundred Rabbits. All you need is a double 9 domino set. Super quick and fun!</li></ul>",
            "url": "http://milofultz.com/2020/06/25/inexpensive-games",
            
            
            
            
            
            "date_published": "2020-06-25T00:00:00-07:00",
            "date_modified": "2020-06-25T00:00:00-07:00",
            
                "author":  {
                "name": "Milo Fultz",
                "url": "http://milofultz.com",
                "avatar": null
                }
                
            
        },
    
        {
            "id": "http://milofultz.com/2020/06/21/quantity-quality",
            "title": "Quality and quantity's relevance to critical feeling",
            "summary": "Quality and quantity are immensely useful in the developing of critical feeling and the ability for honest and effective communication.",
            "content_text": "Quality is an attribute you give to help label something. Quantity is a measurement you use to help label something.Quality requires quantity for it to exist. One can’t measure how hard something is without two things to compare them to. Quantity requires quality for it to exist. One can’t measure something with which it has no label.To attribute a quality to something, it must be fully defined. One cannot attribute a quality to something without fully knowing what it is. In turn, one cannot measure something that has not been fully defined. What is 0 or 100 if one cannot define them?This struck me as I was watching a video[1] and ended up with a discussion with a roommate about this relates to critical feeling. As defined by Bret Weinstein[3], critical feeling is making sure that you don’t get caught up in other people’s feelings. One can use quality and quantity to more honestly trust your critical feeling in this way:When one is presented with a quality or label, either from another person or from within themselves, one must seek to define the quality as fully and completely as possible. For instance, if one is accused of being “lazy”, one must define it, and preferably with whoever is making the accusation in mind. Once this quality is defined, one can then measure if they indeed hold this attribute, how much, and the impact this quality is having upon those affected, which could be themselves, their community, their family, or whatever. Once one has this information, one can truly understand the circumstances and be critical of the quality and it’s truthfulness in it’s application.If one cannot define the quality that is being attributed, they have no business attributing it. And if once defined, one cannot measure the impact the attribute has, then it is not important.I believe this exercise has the potential to avoid claims of essentialism[4] (all humans are bad/good, all X people are Y), to help ground accusations or problems in the realm of the logical and the real, and to present us with further action, instead of letting our brain buck or accept a quality that may or may not be useful or important.References:  https://youtu.be/eOfVBqGPwi0?t=886  Critical Feeling  https://www.youtube.com/watch?v=PfAumoTIeik  https://en.wikipedia.org/wiki/Essentialism",
            "content_html": "<p>Quality is an attribute you give to help label something. Quantity is a measurement you use to help label something.</p><p>Quality requires quantity for it to exist. One can’t measure how hard something is without two things to compare them to. Quantity requires quality for it to exist. One can’t measure something with which it has no label.</p><p>To attribute a quality to something, it must be fully defined. One cannot attribute a quality to something without fully knowing what it is. In turn, one cannot measure something that has not been fully defined. What is 0 or 100 if one cannot define them?</p><hr /><p>This struck me as I was watching a video[1] and ended up with a discussion with a roommate about this relates to <a href=\"/2020/06/10/critical-feeling\">critical feeling</a>. As defined by Bret Weinstein[3], critical feeling is making sure that you don’t get caught up in other people’s feelings. One can use quality and quantity to more honestly trust your critical feeling in this way:</p><p>When one is presented with a quality or label, either from another person or from within themselves, one must seek to define the quality as fully and completely as possible. For instance, if one is accused of being “lazy”, one must define it, and preferably with whoever is making the accusation in mind. Once this quality is defined, one can then measure if they indeed hold this attribute, how much, and the impact this quality is having upon those affected, which could be themselves, their community, their family, or whatever. Once one has this information, one can truly understand the circumstances and be critical of the quality and it’s truthfulness in it’s application.</p><p>If one cannot define the quality that is being attributed, they have no business attributing it. And if once defined, one cannot measure the impact the attribute has, then it is not important.</p><p>I believe this exercise has the potential to avoid claims of essentialism[4] (all humans are bad/good, all X people are Y), to help ground accusations or problems in the realm of the logical and the real, and to present us with further action, instead of letting our brain buck or accept a quality that may or may not be useful or important.</p><hr /><p>References:</p><ol>  <li><a href=\"https://youtu.be/eOfVBqGPwi0?t=886\">https://youtu.be/eOfVBqGPwi0?t=886</a></li>  <li><a href=\"/2020/06/10/critical-feeling\">Critical Feeling</a></li>  <li><a href=\"https://www.youtube.com/watch?v=PfAumoTIeik\">https://www.youtube.com/watch?v=PfAumoTIeik</a></li>  <li><a href=\"https://en.wikipedia.org/wiki/Essentialism\">https://en.wikipedia.org/wiki/Essentialism</a></li></ol>",
            "url": "http://milofultz.com/2020/06/21/quantity-quality",
            
            
            
            
            
            "date_published": "2020-06-21T00:00:00-07:00",
            "date_modified": "2020-06-21T00:00:00-07:00",
            
                "author":  {
                "name": "Milo Fultz",
                "url": "http://milofultz.com",
                "avatar": null
                }
                
            
        },
    
        {
            "id": "http://milofultz.com/2020/06/10/critical-feeling",
            "title": "Critical feeling is just as important as critical thinking",
            "summary": "Critical feeling is making sure that you don't get caught up in other people's feelings. I believe this can improve and better our communication.",
            "content_text": "  Critical feeling is making sure that you don’t get caught up in other people’s feelings.[1]I like this idea a lot because it clarifies a problem that I have often had. My emotional conviction on my values and ethics have often been weak, untethered on clear principled thought, and thus I have been more susceptible to bandwagoning based on big emotions. There have been many times where I later found that my actions or thoughts were not honest to what I actually desired in the situation or believed and this I think was due to a lack of critical feeling.When it comes to critically thinking, the analysis of facts to form a judgment[2], I tend to be more skeptical in the points or ideas of others. I usually disagree with people until I run through the scenario sufficiently and fully understand and agree with what is being presented. Emotions tend to override this skepticism and sweep me up in the romantic nature of whatever is at hand. This I believe is due to a relatively weak understanding of my own emotions and what they are trying to communicate to me, as well as a lack of practice in working with them.The new question is how to practice and develop critical feeling. (Update 20200622: I developed a method that you can find here). As for critical thinking, according to this article in the HBR[3], there are three things that can help you: question assumptions, reason through logic, and diversify thought. I believe these are the same, and for people like me who have had problems with their emotional development, this can include some really difficult practice, alone or with a guide (therapist, friend, family, etc.).In the last few months, I have been going to therapy weekly, devouring YouTube videos about philosophy[4][5][6], and talking a lot with my friends and family about more emotionally complex things, and I have noticed a much larger capacity to understand what is happening with my emotional state, and therefore maintain what I feel while also being able to empathize better with others.References:  https://www.youtube.com/watch?v=PfAumoTIeik  https://en.wikipedia.org/wiki/Critical_thinking  https://hbr.org/2019/05/3-simple-habits-to-improve-your-critical-thinking  https://www.youtube.com/user/thephilosophytube/videos  https://www.youtube.com/user/ContraPoints  https://www.youtube.com/user/alexjoconnor  Quality and quantity’s relevance to critical feeling",
            "content_html": "<blockquote>  <p>Critical feeling is making sure that you don’t get caught up in other people’s feelings.[1]</p></blockquote><p>I like this idea a lot because it clarifies a problem that I have often had. My emotional conviction on my values and ethics have often been weak, untethered on clear principled thought, and thus I have been more susceptible to bandwagoning based on big emotions. There have been many times where I later found that my actions or thoughts were not honest to what I actually desired in the situation or believed and this I think was due to a lack of critical feeling.</p><p>When it comes to critically thinking, the analysis of facts to form a judgment[2], I tend to be more skeptical in the points or ideas of others. I usually disagree with people until I run through the scenario sufficiently and fully understand and agree with what is being presented. Emotions tend to override this skepticism and sweep me up in the romantic nature of whatever is at hand. This I believe is due to a relatively weak understanding of my own emotions and what they are trying to communicate to me, as well as a lack of practice in working with them.</p><p>The new question is how to practice and develop critical feeling. <em>(Update 20200622: I developed a method that you can find <a href=\"/2020/06/21/quantity-quality\">here</a>)</em>. As for critical thinking, according to this article in the HBR[3], there are three things that can help you: question assumptions, reason through logic, and diversify thought. I believe these are the same, and for people like me who have had problems with their emotional development, this can include some really difficult practice, alone or with a guide (therapist, friend, family, etc.).</p><p>In the last few months, I have been going to therapy weekly, devouring YouTube videos about philosophy[4][5][6], and talking a lot with my friends and family about more emotionally complex things, and I have noticed a much larger capacity to understand what is happening with my emotional state, and therefore maintain what I feel while also being able to empathize better with others.</p><hr /><p>References:</p><ol>  <li><a href=\"https://www.youtube.com/watch?v=PfAumoTIeik\">https://www.youtube.com/watch?v=PfAumoTIeik</a></li>  <li><a href=\"https://en.wikipedia.org/wiki/Critical_thinking\">https://en.wikipedia.org/wiki/Critical_thinking</a></li>  <li><a href=\"https://hbr.org/2019/05/3-simple-habits-to-improve-your-critical-thinking\">https://hbr.org/2019/05/3-simple-habits-to-improve-your-critical-thinking</a></li>  <li><a href=\"https://www.youtube.com/user/thephilosophytube/videos\">https://www.youtube.com/user/thephilosophytube/videos</a></li>  <li><a href=\"https://www.youtube.com/user/ContraPoints\">https://www.youtube.com/user/ContraPoints</a></li>  <li><a href=\"https://www.youtube.com/user/alexjoconnor\">https://www.youtube.com/user/alexjoconnor</a></li>  <li><a href=\"/2020/06/21/quantity-quality\">Quality and quantity’s relevance to critical feeling</a></li></ol>",
            "url": "http://milofultz.com/2020/06/10/critical-feeling",
            
            
            
            
            
            "date_published": "2020-06-10T00:00:00-07:00",
            "date_modified": "2020-06-10T00:00:00-07:00",
            
                "author":  {
                "name": "Milo Fultz",
                "url": "http://milofultz.com",
                "avatar": null
                }
                
            
        },
    
        {
            "id": "http://milofultz.com/2020/05/25/exercise-routine",
            "title": "Simple + Minimal Exercise Routine",
            "summary": "A simple, minimal and modular exercise routine I developed that can be done anywhere, focusing mainly on short and simple circuits.",
            "content_text": "A couple of weeks ago, I worked on starting my Zettelkasten and just to try it out and see how it worked, I started with exercise. Using it and a few resources, I was able to come up with a list of various strength, mobility, and flexibility exercises that target various areas and a very basic framework with which to apply them. I won’t be posting all the exercises here, but I will show the system, my focus areas, and my general guidelines it is based on.My dream was to be able to do this anywhere and at anytime.My motivation to exercise is certainly not to get ripped or super swole. As anybody who knows me could probably guess, that’s a bit out of reach, as I am a tiny stick with the metabolism of a squirrel. So knowing that, I wanted my system to take the least amount of time and have the least amount of gear to haul around (preferably zero). I also knew after having purchased and selling gear multiple times that having exercise gear doesn’t really inspire me to exercise, anyway, so I aimed mostly for bodyweight exercises for this reason.After doing a cursory amount of research, I aimed to focus on these different areas[1] in the main part of my workout:  Upper Body  Lower Body  Core  CardioThe other category mentioned was flexibility, which I decided to use as a bookend for my workout.After digging around and settling on a bunch of options for exercises in each of these categories, I am using a high intensity interval training framework described in this blog post[2], “using full-body exercises, while training in a shorter amount of time and doing a circuit”.  Dynamic stretching[3] of whole body, top to bottom[4]  Circuit using one exercise from each of the four categories above in timed increments in any order  Repeat 2 with a short break until you feel well exercised  Flexibility exercises of joints[5][6] and static stretching of whole body, top to bottomUsing bodyweight exercises, this can essentially be done in tiny space with nothing, which is really useful for getting me to do it instead of making excuses.References:  http://www.fitnessauthority247.com/fitness/fit-for-life-the-top-five-areas-to-work-on/  https://themovementathlete.com/workout-in-small-spaces/  https://www.youtube.com/watch?v=LjcZ7FqS5JE  https://www.hss.edu/conditions_dynamic-static-stretching.asp#dynamic  https://www.reddit.com/r/flexibility/comments/6cwsap/complete_guide_to_improving_ankle_mobility/          https://www.youtube.com/watch?v=1QPKpk8WC_I      https://www.youtube.com/watch?v=jlewUVQliFA        https://www.reddit.com/r/Fitness/comments/eh1tb/please_send_help_coder_lifter_with_evertighter/c181mg6/",
            "content_html": "<p>A couple of weeks ago, I worked on starting my <a href=\"/2020/05/22/zettelkasten\">Zettelkasten</a> and just to try it out and see how it worked, I started with exercise. Using it and a few resources, I was able to come up with a list of various strength, mobility, and flexibility exercises that target various areas and a very basic framework with which to apply them. I won’t be posting all the exercises here, but I will show the system, my focus areas, and my general guidelines it is based on.</p><p><strong>My dream was to be able to do this anywhere and at anytime.</strong></p><p>My motivation to exercise is certainly not to get ripped or super swole. As anybody who knows me could probably guess, that’s a bit out of reach, as I am a tiny stick with the metabolism of a squirrel. So knowing that, I wanted my system to take the least amount of time and have the least amount of gear to haul around (preferably zero). I also knew after having purchased and selling gear multiple times that having exercise gear doesn’t really inspire me to exercise, anyway, so I aimed mostly for bodyweight exercises for this reason.</p><p>After doing a cursory amount of research, I aimed to focus on these different areas[1] in the main part of my workout:</p><ul>  <li>Upper Body</li>  <li>Lower Body</li>  <li>Core</li>  <li>Cardio</li></ul><p>The other category mentioned was flexibility, which I decided to use as a bookend for my workout.</p><p>After digging around and settling on a bunch of options for exercises in each of these categories, I am using a high intensity interval training framework described in this blog post[2], “using full-body exercises, while training in a shorter amount of time and doing a circuit”.</p><ol>  <li>Dynamic stretching[3] of whole body, top to bottom[4]</li>  <li>Circuit using one exercise from each of the four categories above in timed increments in any order</li>  <li>Repeat 2 with a short break until you feel well exercised</li>  <li>Flexibility exercises of joints[5][6] and static stretching of whole body, top to bottom</li></ol><p>Using bodyweight exercises, this can essentially be done in tiny space with nothing, which is really useful for getting me to do it instead of making excuses.</p><hr /><p>References:</p><ol>  <li><a href=\"http://www.fitnessauthority247.com/fitness/fit-for-life-the-top-five-areas-to-work-on/\">http://www.fitnessauthority247.com/fitness/fit-for-life-the-top-five-areas-to-work-on/</a></li>  <li><a href=\"https://themovementathlete.com/workout-in-small-spaces/\">https://themovementathlete.com/workout-in-small-spaces/</a></li>  <li><a href=\"https://www.youtube.com/watch?v=LjcZ7FqS5JE\">https://www.youtube.com/watch?v=LjcZ7FqS5JE</a></li>  <li><a href=\"https://www.hss.edu/conditions_dynamic-static-stretching.asp#dynamic\">https://www.hss.edu/conditions_dynamic-static-stretching.asp#dynamic</a></li>  <li><a href=\"https://www.reddit.com/r/flexibility/comments/6cwsap/complete_guide_to_improving_ankle_mobility/\">https://www.reddit.com/r/flexibility/comments/6cwsap/complete_guide_to_improving_ankle_mobility/</a>    <ol>      <li><a href=\"https://www.youtube.com/watch?v=1QPKpk8WC_I\">https://www.youtube.com/watch?v=1QPKpk8WC_I</a></li>      <li><a href=\"https://www.youtube.com/watch?v=jlewUVQliFA\">https://www.youtube.com/watch?v=jlewUVQliFA</a></li>    </ol>  </li>  <li><a href=\"https://www.reddit.com/r/Fitness/comments/eh1tb/please_send_help_coder_lifter_with_evertighter/c181mg6/\">https://www.reddit.com/r/Fitness/comments/eh1tb/please_send_help_coder_lifter_with_evertighter/c181mg6/</a></li></ol>",
            "url": "http://milofultz.com/2020/05/25/exercise-routine",
            
            
            
            
            
            "date_published": "2020-05-25T00:00:00-07:00",
            "date_modified": "2020-05-25T00:00:00-07:00",
            
                "author":  {
                "name": "Milo Fultz",
                "url": "http://milofultz.com",
                "avatar": null
                }
                
            
        },
    
        {
            "id": "http://milofultz.com/2020/05/23/day-planner",
            "title": "Day planner based on location",
            "summary": "A lateral-thinking way to encourage you into desired activities.",
            "content_text": "I found this idea on the internet probably around 2009, made my own version, and then unfortunately lost the reference to the original page. If you know where or from whom this originated, please tell me!The idea of this is to have a day planner where the axis around which you plan is not time, but location. Instead of thinking about what you are going to do between 9am and 10am, this has you think about what you can do in a given space.The thing I like best about this is that it is really good for keeping you in touch with activities you enjoy and places you like, making it easy to do those things by choosing it off of a menu. It’s almost like a worksheet for the day, with the bottom of the page open for note taking, drawing, and scribbling ideas down. Appointments and other real-life things aside, this is a lateral-thinking way to encourage you into desired activities.",
            "content_html": "<p>I found this idea on the internet probably around 2009, made my own version, and then unfortunately lost the reference to the original page. If you know where or from whom this originated, <strong>please</strong> tell me!</p><p>The idea of this is to have a day planner where the axis around which you plan is not time, but location. Instead of thinking about what you are going to do between 9am and 10am, this has you think about what you can do in a given space.</p><p><img src=\"http://milofultz.com/assets/20200523dayplan.jpg\" alt=\"Example of the day planner\" /></p><p>The thing I like best about this is that it is really good for keeping you in touch with activities you enjoy and places you like, making it easy to do those things by choosing it off of a menu. It’s almost like a worksheet for the day, with the bottom of the page open for note taking, drawing, and scribbling ideas down. Appointments and other real-life things aside, this is a lateral-thinking way to encourage you into desired activities.</p>",
            "url": "http://milofultz.com/2020/05/23/day-planner",
            
            
            
            
            
            "date_published": "2020-05-23T00:00:00-07:00",
            "date_modified": "2020-05-23T00:00:00-07:00",
            
                "author":  {
                "name": "Milo Fultz",
                "url": "http://milofultz.com",
                "avatar": null
                }
                
            
        },
    
        {
            "id": "http://milofultz.com/2020/05/22/zettelkasten",
            "title": "I just found out about Zettelkasten",
            "summary": "Zettelkasten makes all of your notes easier to develop, utilize, and organize for whatever you need them",
            "content_text": "I’m probably going to do a hack job explaining this, so TL;DR: Zettelkasten makes all of your notes easier to develop, utilize, and organize for whatever you need them.Zettelkasten is a way of note taking and cataloguing that was popularized by sociologist Niklas Luhmann. This particular system intrigued me because it seems to overcome the issues that some basic note taking strategies have.Note taking, in the way I was taught, is all about writing down what you’re thinking in a stream-of-consiousness, extremely linear way. This can be good for going through a whole thought process and getting it all down, but it’s lacking any ability to be anything but “start here and end up there”. It’s hard to link it to any other ideas without explicitly remembering what your thought process was. It is possible, with use of notes in the margins, post it notes, and maybe a synopsis (which is also a written out linear thought), but is very unwieldy and again relies on your remembering or regularly reviewing your documented info. Kind of defeats the purpose of documentation.The other way is to use a kind of mind map. Starting with a basic idea or concept, one branches out into all related things. Maybe “Food” branches off into “Bread”, “Vegetables”, “Nuts”, “Seeds”, and “Fruits”. Maybe “Bread” then branches off into “Focaccia”, “Yeast”, “Sourdough”, “Rolls”, “Pizza”, etc. This can go along for a LONG time, leading people into a more creative exploratory area, kind of allowing their brain to just utilize that free association. The problem that can occur here is again a lack of mobility. Under “Bread”, maybe you want to create some kind of grouping by if it is a yeasted bread, or if it is enriched. Maybe you want to expound on the greatness of sourdough crust on a pizza, where would you put it: under “Pizza” or “Sourdough”? How would you go about organizing these already existing elements in the map without having duplicates or just wasting time moving things around?I believe that the Zettelkasten can help solve this issue. This allowed Luhmann the luxury of seeing this larger mapping of ideas and freedom of association that the mindmap provides, along with the linearity of thought that the more “academic” linear note taking technique provides, but without their rigid limitations.In my short time playing with this note taking concept, I have used it to take notes on a book I’m reading and help develop some of the major points I’ve seen into things that are relevant to me. I’m able to cross reference from different notes, allowing core concepts to stand on their own and also lead me down expository rabbit holes, allowing a development of smaller ideas that can create new connections once more.The way I see it, the longer I keep my Zettelkasten, the more robust my index of information, the more connections I can make, the better I can understand and develop my ideas.Because you’re probably wondering what it actually is and not just my real glossy surface level explanation of it, I recommend reading more in depth on it in these two articles:  The Zettelkasten Method  Zettelkasten — How One German Scholar Was So Freakishly Productive",
            "content_html": "<p>I’m probably going to do a hack job explaining this, so TL;DR: Zettelkasten makes all of your notes easier to develop, utilize, and organize for whatever you need them.</p><p>Zettelkasten is a way of note taking and cataloguing that was popularized by sociologist Niklas Luhmann. This particular system intrigued me because it seems to overcome the issues that some basic note taking strategies have.</p><p>Note taking, in the way I was taught, is all about writing down what you’re thinking in a stream-of-consiousness, extremely linear way. This can be good for going through a whole thought process and getting it all down, but it’s lacking any ability to be anything but “start here and end up there”. It’s hard to link it to any other ideas without explicitly remembering what your thought process was. It is possible, with use of notes in the margins, post it notes, and maybe a synopsis (which is also a written out linear thought), but is very unwieldy and again relies on your remembering or regularly reviewing your documented info. Kind of defeats the purpose of documentation.</p><p>The other way is to use a kind of <a href=\"https://en.wikipedia.org/wiki/Mind_map\">mind map</a>. Starting with a basic idea or concept, one branches out into all related things. Maybe “Food” branches off into “Bread”, “Vegetables”, “Nuts”, “Seeds”, and “Fruits”. Maybe “Bread” then branches off into “Focaccia”, “Yeast”, “Sourdough”, “Rolls”, “Pizza”, etc. This can go along for a LONG time, leading people into a more creative exploratory area, kind of allowing their brain to just utilize that free association. The problem that can occur here is again a lack of mobility. Under “Bread”, maybe you want to create some kind of grouping by if it is a yeasted bread, or if it is enriched. Maybe you want to expound on the greatness of sourdough crust on a pizza, where would you put it: under “Pizza” or “Sourdough”? How would you go about organizing these already existing elements in the map without having duplicates or just wasting time moving things around?</p><p>I believe that the Zettelkasten can help solve this issue. This allowed Luhmann the luxury of seeing this larger mapping of ideas and freedom of association that the mindmap provides, along with the linearity of thought that the more “academic” linear note taking technique provides, but without their rigid limitations.</p><p>In my short time playing with this note taking concept, I have used it to take notes on a book I’m reading and help develop some of the major points I’ve seen into things that are relevant to me. I’m able to cross reference from different notes, allowing core concepts to stand on their own and also lead me down expository rabbit holes, allowing a development of smaller ideas that can create new connections once more.</p><p>The way I see it, the longer I keep my Zettelkasten, the more robust my index of information, the more connections I can make, the better I can understand and develop my ideas.</p><p>Because you’re probably wondering what it actually is and not just my real glossy surface level explanation of it, I recommend reading more in depth on it in these two articles:</p><ul>  <li><a href=\"https://www.lesswrong.com/posts/NfdHG6oHBJ8Qxc26s/the-zettelkasten-method-1\">The Zettelkasten Method</a></li>  <li><a href=\"https://writingcooperative.com/zettelkasten-how-one-german-scholar-was-so-freakishly-productive-997e4e0ca125\">Zettelkasten — How One German Scholar Was So Freakishly Productive</a></li></ul>",
            "url": "http://milofultz.com/2020/05/22/zettelkasten",
            
            
            
            
            
            "date_published": "2020-05-22T00:00:00-07:00",
            "date_modified": "2020-05-22T00:00:00-07:00",
            
                "author":  {
                "name": "Milo Fultz",
                "url": "http://milofultz.com",
                "avatar": null
                }
                
            
        },
    
        {
            "id": "http://milofultz.com/2020/05/22/keyboard-remapping",
            "title": "Keyboard Remapping on OSX - Adding the Insert Key",
            "summary": "Keyboard Remapping on OSX - Adding the Missing Insert Key for using Trackers And/Or Other Old DOS Programs (Reality Adlib Tracker, MilkyTracker, etc.)",
            "content_text": "I downloaded Reality Adlib Tracker and MilkyTracker the other day and realized that Apple removed their insert key abilities a LONG time ago. The insert key is used quite a bit in these older programs for basic things like adding a line in your tracker, creating your pattern sequence, etc. Along with things like Dosbox, where these old relics are utilized, most of these older programs don’t allow new keybindings, so I had to dig around and find a new solution. I unfortunately couldn’t find anything directly related to trackers and stuff on any of their forums, so I figured I’d try and make something that could be found when searching for trackers, DOS, etc.Here’s one very simple and one not very simple but extremely interesting (read: difficult to understand for a rube like me) solution.SIMPLE And Recommended:Karabiner-Elements is an open-source program that allows you to remap any key on any device to another key. In this instance, I remapped my right alt/option key to the insert key, as I do not use that option key almost ever. In Karabiner, it’s honestly so simple, as you can see in the screenshot. Choose what key you want to press and what you want it to output. I tested this in RAD and it works beautifully.Check out a picture of my settings here.NOT AS SIMPLE And Honestly Not Recommended:So this way is much more in depth and I honestly don’t really know a lot of what I am doing here. What I tested works for me, but of course YMMV.I utilized the ideas listed in nanoant’s article, “macOS function key remapping with hidutil”, as well as the USB HID usage table and made a couple lines of code that can be input to achieve the same effect as above.Check out a picture of my settings here.Go into terminal and type the following:hidutil property --set '{\"UserKeyMapping\":[{\"HIDKeyboardModifierMappingSrc\":0x7000000e6, \"HIDKeyboardModifierMappingDst\":0x700000049}]}'What this does is the hidutil (Human Interface Design utility) is setting a new key map in the following way: key “right alt” is going to now output key “insert”. At this point, it wasn’t working, so I figured I needed to do the opposite, setting the “insert” key to map to “right alt”.hidutil property --set '{\"UserKeyMapping\":[{\"HIDKeyboardModifierMappingSrc\":0x700000049, \"HIDKeyboardModifierMappingDst\":0x7000000e6}]}'This made it work for me, and I don’t fully understand, but it is interesting to note. There are a lot of interesting controls in the USB HID image table, so I wonder if I would need any of these strange controls in the future. At least I’ll know how to map them … maybe?  20201001: Used to make caps lock key the escape key for use with Vim",
            "content_html": "<p>I downloaded <a href=\"https://www.3eality.com/productions/reality-adlib-tracker\">Reality Adlib Tracker</a> and <a href=\"https://milkytracker.titandemo.org/\">MilkyTracker</a> the other day and realized that Apple removed their insert key abilities a LONG time ago. The insert key is used quite a bit in these older programs for basic things like adding a line in your tracker, creating your pattern sequence, etc. Along with things like Dosbox, where these old relics are utilized, most of these older programs don’t allow new keybindings, so I had to dig around and find a new solution. I unfortunately couldn’t find anything directly related to trackers and stuff on any of their forums, so I figured I’d try and make something that could be found when searching for trackers, DOS, etc.</p><p>Here’s one very simple and one not very simple but extremely interesting (read: difficult to understand for a rube like me) solution.</p><hr /><h3 id=\"simple-and-recommended\">SIMPLE And Recommended:</h3><p>Karabiner-Elements is an open-source program that allows you to remap any key on any device to another key. In this instance, I remapped my right alt/option key to the insert key, as I do not use that option key almost ever. In Karabiner, it’s honestly so simple, as you can see in the screenshot. Choose what key you want to press and what you want it to output. I tested this in RAD and it works beautifully.</p><p><a href=\"http://milofultz.com/assets/20200522karabiner.png\">Check out a picture of my settings here.</a></p><hr /><h3 id=\"not-as-simple-and-honestly-not-recommended\">NOT AS SIMPLE And Honestly Not Recommended:</h3><p>So this way is much more in depth and I honestly don’t really know a lot of what I am doing here. What I tested works for me, but of course YMMV.</p><p>I utilized the ideas listed in nanoant’s article, <a href=\"https://www.nanoant.com/mac/macos-function-key-remapping-with-hidutil\">“macOS function key remapping with hidutil”</a>, as well as the <a href=\"https://www.freebsddiary.org/APC/usb_hid_usages.php\">USB HID usage table</a> and made a couple lines of code that can be input to achieve the same effect as above.</p><p><a href=\"http://milofultz.com/assets/20200522karabiner.png\">Check out a picture of my settings here.</a></p><p>Go into terminal and type the following:</p><div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>hidutil property --set '{\"UserKeyMapping\":[{\"HIDKeyboardModifierMappingSrc\":0x7000000e6, \"HIDKeyboardModifierMappingDst\":0x700000049}]}'</code></pre></div></div><p>What this does is the hidutil (Human Interface Design utility) is setting a new key map in the following way: key “right alt” is going to now output key “insert”. At this point, it wasn’t working, so I figured I needed to do the opposite, setting the “insert” key to map to “right alt”.</p><div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>hidutil property --set '{\"UserKeyMapping\":[{\"HIDKeyboardModifierMappingSrc\":0x700000049, \"HIDKeyboardModifierMappingDst\":0x7000000e6}]}'</code></pre></div></div><p>This made it work for me, and I don’t fully understand, but it is interesting to note. There are a lot of interesting controls in the USB HID image table, so I wonder if I would need any of these strange controls in the future. At least I’ll know how to map them … maybe?</p><ul>  <li><em>20201001: Used to make caps lock key the escape key for use with Vim</em></li></ul>",
            "url": "http://milofultz.com/2020/05/22/keyboard-remapping",
            
            
            
            
            
            "date_published": "2020-05-22T00:00:00-07:00",
            "date_modified": "2020-05-22T00:00:00-07:00",
            
                "author":  {
                "name": "Milo Fultz",
                "url": "http://milofultz.com",
                "avatar": null
                }
                
            
        },
    
        {
            "id": "http://milofultz.com/2020/05/22/just-in-case",
            "title": "Buying Things \"Just In Case\" vs. Real Estate",
            "summary": "Does buying a thing just in case I need it in the future outweigh the costs? Putting extreme situations aside, I pretty much always feel the answer is no.",
            "content_text": "In wondering if I should make a purchase, I noticed a problem with my thinking early on: if something was on sale, I’d buy it, just in case I needed it later to accomplish some goal or in a project I had in mind. The reasoning was that if I bought it now, in a year when I need that very specific thing on that project, then I won’t have to pay what feels like an extra amount, as well as extra time, to go and buy it.There were a lot of problems with this line of thinking, mostly that the allure of a sale deluded me into thinking that I will use the thing, making me think about all the things I may need this thing for and justifying it that way. But what finally broke this down for me was thinking about the real estate these things take up and how it affects me.Does buying a thing just in case I need it in the future outweigh the costs? Putting extreme situations aside, I pretty much always feel the answer is no.  The cost of space. Even with smaller things, there is a cost to house these just-in-case items, especially the more you get. Storage isn’t free, and there is a very real cost to keeping your things organized and maintained.  The cost of finding it when you need it. This problem grows worse and worse the more just-in-case stuff you get. If you have a house full of stuff you might use, you have two choices: spend your time organizing and maintaining that organization, or save that time and then spend that time later trying to find it. Either way, your total time spent goes up with each just-in-case item you buy, and if you feel that your time is worth anything, the time spent in trying to find it later will most likely negate any savings you may have gotten.  The mental cost. With items that are tied to half-done or barely started projects, there is a mental cost to seeing these just-in-case items around the house. When I walked by my oak 1x8’s in the garage, I was reminded that I bought those to build a skateboard and I haven’t done anything with them for two years. For me, being reminded of all of that whenever I walked in the garage gave me a sense of disappointment instead of excitement. If I had scheduled time to finish that project before I bought the supplies, I would have closed the loop, finished the project, and not brought down my mood over those years.  The cost of never using it. If you never end up using it, it is a total loss. I can’t tell you how many times I have bought something just in case, just to try and sell it and then give it to a thrift store 4 years later when I finally gave up the ghost. In these situations, I lost 4 years of space, 4 years of organizing and maintaining it, and the full cost of the item. If I do this with one item out of ten, will that make the other nine worth it?There are still situations where buying something just in case is actually useful, but I find that is few and far between. At this point, I have much more usable space than I did before, a lot less half-done or barely started projects, and more money.Overall, if I had to choose one side, I would choose real estate over buying things “just in case”.",
            "content_html": "<p>In wondering if I should make a purchase, I noticed a problem with my thinking early on: if something was on sale, I’d buy it, just in case I needed it later to accomplish some goal or in a project I had in mind. The reasoning was that if I bought it now, in a year when I need that very specific thing on that project, then I won’t have to pay what feels like an extra amount, as well as extra time, to go and buy it.</p><p>There were a lot of problems with this line of thinking, mostly that the allure of a sale deluded me into thinking that I will use the thing, making me think about all the things I may need this thing for and justifying it that way. But what finally broke this down for me was thinking about the real estate these things take up and how it affects me.</p><hr /><p>Does buying a thing just in case I need it in the future outweigh the costs? Putting extreme situations aside, I pretty much always feel the answer is <strong>no</strong>.</p><ol>  <li><strong>The cost of space.</strong> Even with smaller things, there is a cost to house these just-in-case items, especially the more you get. Storage isn’t free, and there is a very real cost to keeping your things organized and maintained.</li>  <li><strong>The cost of finding it when you need it.</strong> This problem grows worse and worse the more just-in-case stuff you get. If you have a house full of stuff you might use, you have two choices: spend your time organizing and maintaining that organization, or save that time and then spend that time later trying to find it. Either way, your total time spent goes up with each just-in-case item you buy, and if you feel that your time is worth anything, the time spent in trying to find it later will most likely negate any savings you may have gotten.</li>  <li><strong>The mental cost.</strong> With items that are tied to half-done or barely started projects, there is a mental cost to seeing these just-in-case items around the house. When I walked by my oak 1x8’s in the garage, I was reminded that I bought those to build a skateboard and I haven’t done anything with them for two years. For me, being reminded of all of that whenever I walked in the garage gave me a sense of disappointment instead of excitement. If I had scheduled time to finish that project before I bought the supplies, I would have closed the loop, finished the project, and not brought down my mood over those years.</li>  <li><strong>The cost of never using it.</strong> If you never end up using it, it is a <em>total loss</em>. I can’t tell you how many times I have bought something just in case, just to try and sell it and then give it to a thrift store 4 years later when I finally gave up the ghost. In these situations, I lost 4 years of space, 4 years of organizing and maintaining it, and the full cost of the item. If I do this with one item out of ten, will that make the other nine worth it?</li></ol><hr /><p>There are still situations where buying something just in case is actually useful, but I find that is few and far between. At this point, I have much more usable space than I did before, a lot less half-done or barely started projects, and more money.</p><p>Overall, if I had to choose one side, I would choose real estate over buying things “just in case”.</p>",
            "url": "http://milofultz.com/2020/05/22/just-in-case",
            
            
            
            
            
            "date_published": "2020-05-22T00:00:00-07:00",
            "date_modified": "2020-05-22T00:00:00-07:00",
            
                "author":  {
                "name": "Milo Fultz",
                "url": "http://milofultz.com",
                "avatar": null
                }
                
            
        },
    
        {
            "id": "http://milofultz.com/2020/05/17/adam-savage",
            "title": "The Adam Savage Trial Method",
            "summary": "When you're starting a hobby, don't buy the expensive tools. Buy something mid-range. If you use it so much that it breaks, buy the best one to replace it.",
            "content_text": "Adam Savage agreed with the following advice regarding buying tools:  When you’re first starting a hobby, don’t buy the expensive tools. Buy something mid-range. If you use it so much that it breaks, then buy the best one to replace it.[1]Following with:  Once I was working professionally my goal was to steadily accumulate better versions of my high-use tools. And if there was a tool I didn’t have but NEEDED more than 3x/year I’d invest in that tool.[1]If you are unsure how often you will use this tool or it’s efficacy in achieving your goal, you may buy cheap first on purpose. This goes against the prevailing advice of “pennywise and pound foolish” and “buy cheap, buy twice”, but in the long-term, this advice may save money and give you valuable data you didn’t have before.If you are considering getting a tool, you may be able to bypass most criteria aside from “Effectiveness” with this method. Simply look for the one that is cheapest and will get the job done well. It doesn’t have to be perfect or do everything, but it needs to do the job. In buying cheap here, you are ending up giving yourself a way to accrue data:  Do I actually need this tool?  Will I use this tool very often?  Is this tool effective?  Does this tool do everything I need it to?  Do I need it to do more than it does now?  What are the elements I wish were improved?These insights are things you may not have known to think about prior to owning this “inferior” tool, and now for a minimal investment and real world experience, you can make a better informed purchase in the future.References:  https://twitter.com/donttrythis/status/941149124497305600",
            "content_html": "<p>Adam Savage agreed with the following advice regarding buying tools:</p><blockquote>  <p>When you’re first starting a hobby, don’t buy the expensive tools. Buy something mid-range. If you use it so much that it breaks, then buy the best one to replace it.[1]</p></blockquote><p>Following with:</p><blockquote>  <p>Once I was working professionally my goal was to steadily accumulate better versions of my high-use tools. And if there was a tool I didn’t have but NEEDED more than 3x/year I’d invest in that tool.[1]</p></blockquote><p>If you are unsure how often you will use this tool or it’s efficacy in achieving your goal, you may buy cheap first <em>on purpose</em>. This goes against the prevailing advice of “pennywise and pound foolish” and “buy cheap, buy twice”, but in the long-term, this advice may save money and give you valuable data you didn’t have before.</p><p>If you are considering getting a tool, you may be able to bypass most criteria aside from “Effectiveness” with this method. Simply look for the one that is cheapest and will get the job done well. It doesn’t have to be perfect or do everything, but it needs to do the job. In buying cheap here, you are ending up giving yourself a way to accrue data:</p><ul>  <li>Do I actually need this tool?</li>  <li>Will I use this tool very often?</li>  <li>Is this tool effective?</li>  <li>Does this tool do everything I need it to?</li>  <li>Do I need it to do more than it does now?</li>  <li>What are the elements I wish were improved?</li></ul><p>These insights are things you may not have known to think about prior to owning this “inferior” tool, and now for a minimal investment and real world experience, you can make a better informed purchase in the future.</p><hr /><p>References:</p><ol>  <li><a href=\"https://twitter.com/donttrythis/status/941149124497305600\">https://twitter.com/donttrythis/status/941149124497305600</a></li></ol>",
            "url": "http://milofultz.com/2020/05/17/adam-savage",
            
            
            
            
            
            "date_published": "2020-05-17T00:00:00-07:00",
            "date_modified": "2020-05-17T00:00:00-07:00",
            
                "author":  {
                "name": "Milo Fultz",
                "url": "http://milofultz.com",
                "avatar": null
                }
                
            
        },
    
        {
            "id": "http://milofultz.com/2020/05/01/old-internet",
            "title": "I Miss The Old Internet",
            "summary": null,
            "content_text": "I miss the old internet.Where everything was Times New Roman and you rummaged around people’s websites to see what kind of stuff they were interested in. You’d read their treatises about some topic that was so foreign to you but you would get lost in it. It was like walking into somebody’s workshop: half-finished ideas, seemingly throwaway creations, and really weird shit.I wanted a place to put whatever I wanted, like a digital garden instead of a perfectly curated space for branding or whatever. My creativity suffers when I worry about my image.",
            "content_html": "<p>I miss the old internet.</p><p>Where everything was Times New Roman and you rummaged around people’s websites to see what kind of stuff they were interested in. You’d read their treatises about some topic that was so foreign to you but you would get lost in it. It was like walking into somebody’s workshop: half-finished ideas, seemingly throwaway creations, and really weird shit.</p><p>I wanted a place to put whatever I wanted, like a <a href=\"https://joelhooks.com/digital-garden\">digital garden</a> instead of a perfectly curated space for branding or whatever. My creativity suffers when I worry about my image.</p><!-- - _202XXXXX: Update format_ -->",
            "url": "http://milofultz.com/2020/05/01/old-internet",
            
            
            
            
            
            "date_published": "2020-05-01T00:00:00-07:00",
            "date_modified": "2020-05-01T00:00:00-07:00",
            
                "author":  {
                "name": "Milo Fultz",
                "url": "http://milofultz.com",
                "avatar": null
                }
                
            
        }
    
    ]
}